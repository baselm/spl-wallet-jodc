[{"/Users/453543/spl-wallet-jodc/src/index.js":"1","/Users/453543/spl-wallet-jodc/src/App.js":"2","/Users/453543/spl-wallet-jodc/src/serviceWorker.js":"3","/Users/453543/spl-wallet-jodc/src/components/NavigationFrame.js":"4","/Users/453543/spl-wallet-jodc/src/components/DialogForm.js":"5","/Users/453543/spl-wallet-jodc/src/components/LoadingIndicator.js":"6","/Users/453543/spl-wallet-jodc/src/utils/page.js":"7","/Users/453543/spl-wallet-jodc/src/utils/connected-wallets.js":"8","/Users/453543/spl-wallet-jodc/src/pages/WalletPage.js":"9","/Users/453543/spl-wallet-jodc/src/pages/PopupPage.js":"10","/Users/453543/spl-wallet-jodc/src/pages/LoginPage.js":"11","/Users/453543/spl-wallet-jodc/src/utils/tokens/names.js":"12","/Users/453543/spl-wallet-jodc/src/pages/ConnectionsPage.js":"13","/Users/453543/spl-wallet-jodc/src/utils/utils.ts":"14","/Users/453543/spl-wallet-jodc/src/utils/connection.tsx":"15","/Users/453543/spl-wallet-jodc/src/components/ExportAccountDialog.js":"16","/Users/453543/spl-wallet-jodc/src/components/BalancesList.js":"17","/Users/453543/spl-wallet-jodc/src/utils/walletProvider/localStorage.js":"18","/Users/453543/spl-wallet-jodc/src/components/AddAccountDialog.js":"19","/Users/453543/spl-wallet-jodc/src/utils/clusters.js":"20","/Users/453543/spl-wallet-jodc/src/components/ConnectionIcon.js":"21","/Users/453543/spl-wallet-jodc/src/components/AddHarwareWalletDialog.js":"22","/Users/453543/spl-wallet-jodc/src/components/DeleteMnemonicDialog.js":"23","/Users/453543/spl-wallet-jodc/src/components/SolanaIcon.js":"24","/Users/453543/spl-wallet-jodc/src/components/AddCustomClusterDialog.js":"25","/Users/453543/spl-wallet-jodc/src/utils/tokens/instructions.js":"26","/Users/453543/spl-wallet-jodc/src/utils/tokens/data.js":"27","/Users/453543/spl-wallet-jodc/src/utils/wallet-seed.js":"28","/Users/453543/spl-wallet-jodc/src/components/DebugButtons.js":"29","/Users/453543/spl-wallet-jodc/src/components/ConnectionsList.js":"30","/Users/453543/spl-wallet-jodc/src/utils/notifications.js":"31","/Users/453543/spl-wallet-jodc/src/utils/walletProvider/factory.js":"32","/Users/453543/spl-wallet-jodc/src/utils/fetch-loop.ts":"33","/Users/453543/spl-wallet-jodc/src/components/SignTransactionFormContent.js":"34","/Users/453543/spl-wallet-jodc/src/components/SignFormContent.js":"35","/Users/453543/spl-wallet-jodc/src/components/SwapButton.js":"36","/Users/453543/spl-wallet-jodc/src/components/MergeAccountsDialog.js":"37","/Users/453543/spl-wallet-jodc/src/utils/walletProvider/ledger.js":"38","/Users/453543/spl-wallet-jodc/src/components/DomainsList.tsx":"39","/Users/453543/spl-wallet-jodc/src/utils/tokens/index.js":"40","/Users/453543/spl-wallet-jodc/src/components/instructions/UnknownInstruction.js":"41","/Users/453543/spl-wallet-jodc/src/components/instructions/DexInstruction.js":"42","/Users/453543/spl-wallet-jodc/src/components/instructions/TokenInstruction.js":"43","/Users/453543/spl-wallet-jodc/src/components/instructions/NewOrder.js":"44","/Users/453543/spl-wallet-jodc/src/components/instructions/SystemInstruction.js":"45","/Users/453543/spl-wallet-jodc/src/components/instructions/StakeInstruction.js":"46","/Users/453543/spl-wallet-jodc/src/utils/transactions.ts":"47","/Users/453543/spl-wallet-jodc/src/utils/walletProvider/ledger-core.js":"48","/Users/453543/spl-wallet-jodc/src/components/instructions/LabelValue.js":"49","/Users/453543/spl-wallet-jodc/src/utils/name-service/index.ts":"50","/Users/453543/spl-wallet-jodc/src/components/EditAccountNameDialog.js":"51","/Users/453543/spl-wallet-jodc/src/components/TokenIcon.js":"52","/Users/453543/spl-wallet-jodc/src/utils/config.js":"53","/Users/453543/spl-wallet-jodc/src/components/CloseTokenAccountButton.js":"54","/Users/453543/spl-wallet-jodc/src/utils/swap/api.js":"55","/Users/453543/spl-wallet-jodc/src/utils/markets.ts":"56","/Users/453543/spl-wallet-jodc/src/components/SendDialog.js":"57","/Users/453543/spl-wallet-jodc/src/components/DepositDialog.js":"58","/Users/453543/spl-wallet-jodc/src/utils/region.ts":"59","/Users/453543/spl-wallet-jodc/src/components/AddTokenDialog.js":"60","/Users/453543/spl-wallet-jodc/src/components/TokenInfoDialog.js":"61","/Users/453543/spl-wallet-jodc/src/components/FtxPay/FtxPayDialog.js":"62","/Users/453543/spl-wallet-jodc/src/utils/swap/eth.js":"63","/Users/453543/spl-wallet-jodc/src/components/CopyableDisplay.js":"64","/Users/453543/spl-wallet-jodc/src/components/EthFeeEstimate.tsx":"65","/Users/453543/spl-wallet-jodc/src/components/IslamicIcon.js":"66","/Users/453543/spl-wallet-jodc/src/pages/Dashboard.js":"67","/Users/453543/spl-wallet-jodc/src/pages/Invest.js":"68","/Users/453543/spl-wallet-jodc/src/utils/wallet.js":"69","/Users/453543/spl-wallet-jodc/src/pages/Borrow.js":"70","/Users/453543/spl-wallet-jodc/src/pages/Deposits.js":"71","/Users/453543/spl-wallet-jodc/src/pages/Orders.js":"72","/Users/453543/spl-wallet-jodc/src/pages/Chart.js":"73","/Users/453543/spl-wallet-jodc/src/pages/Title.js":"74","/Users/453543/spl-wallet-jodc/src/pages/listItems.js":"75","/Users/453543/spl-wallet-jodc/src/pages/DemoDashboard.js":"76","/Users/453543/spl-wallet-jodc/src/translations/english/translations.js":"77","/Users/453543/spl-wallet-jodc/src/translations/arabic/translations.js":"78","/Users/453543/spl-wallet-jodc/src/i18n.js":"79","/Users/453543/drawer/spl-wallet-jodc/src/index.js":"80","/Users/453543/drawer/spl-wallet-jodc/src/App.js":"81","/Users/453543/drawer/spl-wallet-jodc/src/serviceWorker.js":"82","/Users/453543/drawer/spl-wallet-jodc/src/components/DialogForm.js":"83","/Users/453543/drawer/spl-wallet-jodc/src/components/LoadingIndicator.js":"84","/Users/453543/drawer/spl-wallet-jodc/src/components/NavigationFrame.js":"85","/Users/453543/drawer/spl-wallet-jodc/src/utils/wallet.js":"86","/Users/453543/drawer/spl-wallet-jodc/src/utils/connected-wallets.js":"87","/Users/453543/drawer/spl-wallet-jodc/src/utils/page.js":"88","/Users/453543/drawer/spl-wallet-jodc/src/pages/ConnectionsPage.js":"89","/Users/453543/drawer/spl-wallet-jodc/src/pages/WalletPage.js":"90","/Users/453543/drawer/spl-wallet-jodc/src/pages/PopupPage.js":"91","/Users/453543/drawer/spl-wallet-jodc/src/pages/Borrow.js":"92","/Users/453543/drawer/spl-wallet-jodc/src/pages/LoginPage.js":"93","/Users/453543/drawer/spl-wallet-jodc/src/pages/Invest.js":"94","/Users/453543/drawer/spl-wallet-jodc/src/pages/Dashboard.js":"95","/Users/453543/drawer/spl-wallet-jodc/src/pages/DemoDashboard.js":"96","/Users/453543/drawer/spl-wallet-jodc/src/utils/tokens/names.js":"97","/Users/453543/drawer/spl-wallet-jodc/src/translations/english/translations.js":"98","/Users/453543/drawer/spl-wallet-jodc/src/translations/arabic/translations.js":"99","/Users/453543/drawer/spl-wallet-jodc/src/utils/utils.ts":"100","/Users/453543/drawer/spl-wallet-jodc/src/utils/connection.tsx":"101","/Users/453543/drawer/spl-wallet-jodc/src/components/ExportAccountDialog.js":"102","/Users/453543/drawer/spl-wallet-jodc/src/components/SolanaIcon.js":"103","/Users/453543/drawer/spl-wallet-jodc/src/utils/clusters.js":"104","/Users/453543/drawer/spl-wallet-jodc/src/components/AddAccountDialog.js":"105","/Users/453543/drawer/spl-wallet-jodc/src/components/DeleteMnemonicDialog.js":"106","/Users/453543/drawer/spl-wallet-jodc/src/components/ConnectionIcon.js":"107","/Users/453543/drawer/spl-wallet-jodc/src/components/AddHarwareWalletDialog.js":"108","/Users/453543/drawer/spl-wallet-jodc/src/components/AddCustomClusterDialog.js":"109","/Users/453543/drawer/spl-wallet-jodc/src/components/IslamicIcon.js":"110","/Users/453543/drawer/spl-wallet-jodc/src/pages/Deposits.js":"111","/Users/453543/drawer/spl-wallet-jodc/src/pages/Chart.js":"112","/Users/453543/drawer/spl-wallet-jodc/src/pages/Orders.js":"113","/Users/453543/drawer/spl-wallet-jodc/src/pages/listItems.js":"114","/Users/453543/drawer/spl-wallet-jodc/src/utils/wallet-seed.js":"115","/Users/453543/drawer/spl-wallet-jodc/src/utils/fetch-loop.ts":"116","/Users/453543/drawer/spl-wallet-jodc/src/components/BalancesList.js":"117","/Users/453543/drawer/spl-wallet-jodc/src/utils/markets.ts":"118","/Users/453543/drawer/spl-wallet-jodc/src/pages/Title.js":"119","/Users/453543/drawer/spl-wallet-jodc/src/components/MergeAccountsDialog.js":"120","/Users/453543/drawer/spl-wallet-jodc/src/components/SwapButton.js":"121","/Users/453543/drawer/spl-wallet-jodc/src/components/EditAccountNameDialog.js":"122","/Users/453543/drawer/spl-wallet-jodc/src/components/TokenIcon.js":"123","/Users/453543/drawer/spl-wallet-jodc/src/components/DomainsList.tsx":"124","/Users/453543/drawer/spl-wallet-jodc/src/utils/notifications.js":"125","/Users/453543/drawer/spl-wallet-jodc/src/utils/tokens/index.js":"126","/Users/453543/drawer/spl-wallet-jodc/src/utils/tokens/data.js":"127","/Users/453543/drawer/spl-wallet-jodc/src/utils/tokens/instructions.js":"128","/Users/453543/drawer/spl-wallet-jodc/src/utils/name-service/index.ts":"129","/Users/453543/drawer/spl-wallet-jodc/src/components/CloseTokenAccountButton.js":"130","/Users/453543/drawer/spl-wallet-jodc/src/utils/config.js":"131","/Users/453543/drawer/spl-wallet-jodc/src/components/DepositDialog.js":"132","/Users/453543/drawer/spl-wallet-jodc/src/components/SendDialog.js":"133","/Users/453543/drawer/spl-wallet-jodc/src/components/AddTokenDialog.js":"134","/Users/453543/drawer/spl-wallet-jodc/src/utils/swap/api.js":"135","/Users/453543/drawer/spl-wallet-jodc/src/components/TokenInfoDialog.js":"136","/Users/453543/drawer/spl-wallet-jodc/src/components/FtxPay/FtxPayDialog.js":"137","/Users/453543/drawer/spl-wallet-jodc/src/utils/region.ts":"138","/Users/453543/drawer/spl-wallet-jodc/src/components/CopyableDisplay.js":"139","/Users/453543/drawer/spl-wallet-jodc/src/utils/swap/eth.js":"140","/Users/453543/drawer/spl-wallet-jodc/src/components/EthFeeEstimate.tsx":"141","/Users/453543/drawer/spl-wallet-jodc/src/utils/walletProvider/localStorage.js":"142","/Users/453543/drawer/spl-wallet-jodc/src/utils/walletProvider/ledger.js":"143","/Users/453543/drawer/spl-wallet-jodc/src/components/SignTransactionFormContent.js":"144","/Users/453543/drawer/spl-wallet-jodc/src/components/SignFormContent.js":"145","/Users/453543/drawer/spl-wallet-jodc/src/components/DebugButtons.js":"146","/Users/453543/drawer/spl-wallet-jodc/src/utils/walletProvider/factory.js":"147","/Users/453543/drawer/spl-wallet-jodc/src/components/ConnectionsList.js":"148","/Users/453543/drawer/spl-wallet-jodc/src/utils/walletProvider/ledger-core.js":"149","/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/TokenInstruction.js":"150","/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/DexInstruction.js":"151","/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/StakeInstruction.js":"152","/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/UnknownInstruction.js":"153","/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/SystemInstruction.js":"154","/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/NewOrder.js":"155","/Users/453543/drawer/spl-wallet-jodc/src/utils/transactions.ts":"156","/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/LabelValue.js":"157","/Users/453543/drawer/spl-wallet-jodc/src/translations/i18n.js":"158"},{"size":521,"mtime":1634507799058,"results":"159","hashOfConfig":"160"},{"size":7776,"mtime":1635214578287,"results":"161","hashOfConfig":"160"},{"size":5103,"mtime":1632675980894,"results":"162","hashOfConfig":"160"},{"size":20349,"mtime":1635214442669,"results":"163","hashOfConfig":"160"},{"size":720,"mtime":1632675980885,"results":"164","hashOfConfig":"160"},{"size":966,"mtime":1635211253142,"results":"165","hashOfConfig":"160"},{"size":389,"mtime":1633896971392,"results":"166","hashOfConfig":"160"},{"size":975,"mtime":1632675980895,"results":"167","hashOfConfig":"160"},{"size":1269,"mtime":1635213071553,"results":"168","hashOfConfig":"160"},{"size":14806,"mtime":1633873763795,"results":"169","hashOfConfig":"160"},{"size":15980,"mtime":1635213015966,"results":"170","hashOfConfig":"160"},{"size":14427,"mtime":1634442773025,"results":"171","hashOfConfig":"160"},{"size":866,"mtime":1635213111286,"results":"172","hashOfConfig":"160"},{"size":3255,"mtime":1632675980900,"results":"173","hashOfConfig":"160"},{"size":4029,"mtime":1635214424386,"results":"174","hashOfConfig":"160"},{"size":2369,"mtime":1633873763787,"results":"175","hashOfConfig":"160"},{"size":26035,"mtime":1635214437679,"results":"176","hashOfConfig":"160"},{"size":2135,"mtime":1632675980902,"results":"177","hashOfConfig":"160"},{"size":2699,"mtime":1634476746881,"results":"178","hashOfConfig":"160"},{"size":1491,"mtime":1634438816670,"results":"179","hashOfConfig":"160"},{"size":825,"mtime":1632675980884,"results":"180","hashOfConfig":"160"},{"size":5944,"mtime":1632675980882,"results":"181","hashOfConfig":"160"},{"size":2212,"mtime":1632675980885,"results":"182","hashOfConfig":"160"},{"size":929,"mtime":1632675980890,"results":"183","hashOfConfig":"160"},{"size":1647,"mtime":1632675980882,"results":"184","hashOfConfig":"160"},{"size":5217,"mtime":1632675980899,"results":"185","hashOfConfig":"160"},{"size":967,"mtime":1632675980899,"results":"186","hashOfConfig":"160"},{"size":6821,"mtime":1632675980900,"results":"187","hashOfConfig":"160"},{"size":2941,"mtime":1634440181788,"results":"188","hashOfConfig":"160"},{"size":4444,"mtime":1633873763795,"results":"189","hashOfConfig":"160"},{"size":2799,"mtime":1634473603612,"results":"190","hashOfConfig":"160"},{"size":355,"mtime":1632675980901,"results":"191","hashOfConfig":"160"},{"size":5715,"mtime":1632675980895,"results":"192","hashOfConfig":"160"},{"size":10379,"mtime":1633873763794,"results":"193","hashOfConfig":"160"},{"size":2668,"mtime":1633873763794,"results":"194","hashOfConfig":"160"},{"size":4474,"mtime":1633873763788,"results":"195","hashOfConfig":"160"},{"size":10253,"mtime":1633873763787,"results":"196","hashOfConfig":"160"},{"size":1907,"mtime":1632675980902,"results":"197","hashOfConfig":"160"},{"size":8334,"mtime":1633873763787,"results":"198","hashOfConfig":"160"},{"size":10132,"mtime":1632675980899,"results":"199","hashOfConfig":"160"},{"size":1342,"mtime":1632675980892,"results":"200","hashOfConfig":"160"},{"size":2261,"mtime":1633873763795,"results":"201","hashOfConfig":"160"},{"size":2494,"mtime":1633873763790,"results":"202","hashOfConfig":"160"},{"size":1983,"mtime":1633873763795,"results":"203","hashOfConfig":"160"},{"size":1657,"mtime":1632675980891,"results":"204","hashOfConfig":"160"},{"size":2308,"mtime":1632675980891,"results":"205","hashOfConfig":"160"},{"size":13748,"mtime":1633873763794,"results":"206","hashOfConfig":"160"},{"size":4603,"mtime":1632675980902,"results":"207","hashOfConfig":"160"},{"size":501,"mtime":1632675980891,"results":"208","hashOfConfig":"160"},{"size":3413,"mtime":1633873763794,"results":"209","hashOfConfig":"160"},{"size":1428,"mtime":1634481604949,"results":"210","hashOfConfig":"160"},{"size":653,"mtime":1632675980890,"results":"211","hashOfConfig":"160"},{"size":125,"mtime":1632675980895,"results":"212","hashOfConfig":"160"},{"size":1727,"mtime":1633873763787,"results":"213","hashOfConfig":"160"},{"size":1257,"mtime":1632675980897,"results":"214","hashOfConfig":"160"},{"size":3235,"mtime":1635209587359,"results":"215","hashOfConfig":"160"},{"size":23136,"mtime":1634435307604,"results":"216","hashOfConfig":"160"},{"size":11083,"mtime":1634435630694,"results":"217","hashOfConfig":"160"},{"size":259,"mtime":1632675980897,"results":"218","hashOfConfig":"160"},{"size":9082,"mtime":1633873763787,"results":"219","hashOfConfig":"160"},{"size":2240,"mtime":1634428759966,"results":"220","hashOfConfig":"160"},{"size":4754,"mtime":1633873763812,"results":"221","hashOfConfig":"160"},{"size":6767,"mtime":1632675980898,"results":"222","hashOfConfig":"160"},{"size":2487,"mtime":1634436434703,"results":"223","hashOfConfig":"160"},{"size":2090,"mtime":1632675980886,"results":"224","hashOfConfig":"160"},{"size":1766,"mtime":1633769372154,"results":"225","hashOfConfig":"160"},{"size":10985,"mtime":1635210331937,"results":"226","hashOfConfig":"160"},{"size":0,"mtime":1635200154096,"results":"227","hashOfConfig":"160"},{"size":13708,"mtime":1635214432154,"results":"228","hashOfConfig":"160"},{"size":114,"mtime":1635194840050,"results":"229","hashOfConfig":"160"},{"size":735,"mtime":1634991648327,"results":"230","hashOfConfig":"160"},{"size":2223,"mtime":1633893618408,"results":"231","hashOfConfig":"160"},{"size":1758,"mtime":1633893701026,"results":"232","hashOfConfig":"160"},{"size":351,"mtime":1633893765017,"results":"233","hashOfConfig":"160"},{"size":1959,"mtime":1633895086788,"results":"234","hashOfConfig":"160"},{"size":5731,"mtime":1634990364015,"results":"235","hashOfConfig":"160"},{"size":5046,"mtime":1635194340335,"results":"236","hashOfConfig":"160"},{"size":7192,"mtime":1635194379954,"results":"237","hashOfConfig":"160"},{"size":1427,"mtime":1635210968913,"results":"238","hashOfConfig":"160"},{"size":504,"mtime":1635222785952,"results":"239","hashOfConfig":"240"},{"size":7830,"mtime":1635222785949,"results":"241","hashOfConfig":"240"},{"size":5103,"mtime":1635216864720,"results":"242","hashOfConfig":"240"},{"size":720,"mtime":1635216864712,"results":"243","hashOfConfig":"240"},{"size":913,"mtime":1635222785951,"results":"244","hashOfConfig":"240"},{"size":20349,"mtime":1635223156428,"results":"245","hashOfConfig":"240"},{"size":13708,"mtime":1635218358907,"results":"246","hashOfConfig":"240"},{"size":975,"mtime":1635216864722,"results":"247","hashOfConfig":"240"},{"size":389,"mtime":1635216864723,"results":"248","hashOfConfig":"240"},{"size":866,"mtime":1635216864718,"results":"249","hashOfConfig":"240"},{"size":1564,"mtime":1635222785955,"results":"250","hashOfConfig":"240"},{"size":14806,"mtime":1635216864720,"results":"251","hashOfConfig":"240"},{"size":1310,"mtime":1635222785953,"results":"252","hashOfConfig":"240"},{"size":16006,"mtime":1635222785954,"results":"253","hashOfConfig":"240"},{"size":140,"mtime":1635222785954,"results":"254","hashOfConfig":"240"},{"size":10985,"mtime":1635222813150,"results":"255","hashOfConfig":"240"},{"size":5731,"mtime":1635216864719,"results":"256","hashOfConfig":"240"},{"size":14427,"mtime":1635216864725,"results":"257","hashOfConfig":"240"},{"size":4812,"mtime":1635222785956,"results":"258","hashOfConfig":"240"},{"size":7192,"mtime":1635223113335,"results":"259","hashOfConfig":"240"},{"size":3255,"mtime":1635216864726,"results":"260","hashOfConfig":"240"},{"size":4085,"mtime":1635222785957,"results":"261","hashOfConfig":"240"},{"size":2369,"mtime":1635216864713,"results":"262","hashOfConfig":"240"},{"size":929,"mtime":1635216864716,"results":"263","hashOfConfig":"240"},{"size":1491,"mtime":1635218358906,"results":"264","hashOfConfig":"240"},{"size":2699,"mtime":1635218358895,"results":"265","hashOfConfig":"240"},{"size":2212,"mtime":1635216864712,"results":"266","hashOfConfig":"240"},{"size":825,"mtime":1635216864711,"results":"267","hashOfConfig":"240"},{"size":5944,"mtime":1635216864709,"results":"268","hashOfConfig":"240"},{"size":1647,"mtime":1635216864709,"results":"269","hashOfConfig":"240"},{"size":1766,"mtime":1635216864714,"results":"270","hashOfConfig":"240"},{"size":666,"mtime":1635222785953,"results":"271","hashOfConfig":"240"},{"size":1758,"mtime":1635216864718,"results":"272","hashOfConfig":"240"},{"size":2223,"mtime":1635216864719,"results":"273","hashOfConfig":"240"},{"size":1959,"mtime":1635216864720,"results":"274","hashOfConfig":"240"},{"size":6821,"mtime":1635216864726,"results":"275","hashOfConfig":"240"},{"size":5715,"mtime":1635216864722,"results":"276","hashOfConfig":"240"},{"size":25621,"mtime":1635222785950,"results":"277","hashOfConfig":"240"},{"size":3327,"mtime":1635223006421,"results":"278","hashOfConfig":"240"},{"size":351,"mtime":1635216864720,"results":"279","hashOfConfig":"240"},{"size":10253,"mtime":1635216864714,"results":"280","hashOfConfig":"240"},{"size":4474,"mtime":1635216864716,"results":"281","hashOfConfig":"240"},{"size":1428,"mtime":1635218358898,"results":"282","hashOfConfig":"240"},{"size":653,"mtime":1635216864716,"results":"283","hashOfConfig":"240"},{"size":8334,"mtime":1635216864713,"results":"284","hashOfConfig":"240"},{"size":2799,"mtime":1635218358907,"results":"285","hashOfConfig":"240"},{"size":10132,"mtime":1635216864724,"results":"286","hashOfConfig":"240"},{"size":967,"mtime":1635216864724,"results":"287","hashOfConfig":"240"},{"size":5217,"mtime":1635216864725,"results":"288","hashOfConfig":"240"},{"size":3413,"mtime":1635216864723,"results":"289","hashOfConfig":"240"},{"size":1727,"mtime":1635216864710,"results":"290","hashOfConfig":"240"},{"size":125,"mtime":1635216864722,"results":"291","hashOfConfig":"240"},{"size":11083,"mtime":1635218358897,"results":"292","hashOfConfig":"240"},{"size":23136,"mtime":1635218358900,"results":"293","hashOfConfig":"240"},{"size":9082,"mtime":1635216864710,"results":"294","hashOfConfig":"240"},{"size":1257,"mtime":1635216864724,"results":"295","hashOfConfig":"240"},{"size":2240,"mtime":1635216864716,"results":"296","hashOfConfig":"240"},{"size":4754,"mtime":1635216864714,"results":"297","hashOfConfig":"240"},{"size":259,"mtime":1635216864723,"results":"298","hashOfConfig":"240"},{"size":2487,"mtime":1635218358896,"results":"299","hashOfConfig":"240"},{"size":6767,"mtime":1635216864724,"results":"300","hashOfConfig":"240"},{"size":2090,"mtime":1635216864713,"results":"301","hashOfConfig":"240"},{"size":2135,"mtime":1635216864727,"results":"302","hashOfConfig":"240"},{"size":1907,"mtime":1635216864727,"results":"303","hashOfConfig":"240"},{"size":10379,"mtime":1635216864715,"results":"304","hashOfConfig":"240"},{"size":2668,"mtime":1635216864715,"results":"305","hashOfConfig":"240"},{"size":2941,"mtime":1635218358897,"results":"306","hashOfConfig":"240"},{"size":355,"mtime":1635216864727,"results":"307","hashOfConfig":"240"},{"size":4444,"mtime":1635216864711,"results":"308","hashOfConfig":"240"},{"size":4603,"mtime":1635216864727,"results":"309","hashOfConfig":"240"},{"size":2494,"mtime":1635216864717,"results":"310","hashOfConfig":"240"},{"size":2261,"mtime":1635216864716,"results":"311","hashOfConfig":"240"},{"size":2308,"mtime":1635216864717,"results":"312","hashOfConfig":"240"},{"size":1342,"mtime":1635216864717,"results":"313","hashOfConfig":"240"},{"size":1657,"mtime":1635216864717,"results":"314","hashOfConfig":"240"},{"size":1983,"mtime":1635216864717,"results":"315","hashOfConfig":"240"},{"size":13748,"mtime":1635216864726,"results":"316","hashOfConfig":"240"},{"size":501,"mtime":1635216864716,"results":"317","hashOfConfig":"240"},{"size":489,"mtime":1635222785956,"results":"318","hashOfConfig":"240"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},"1ydwxjp",{"filePath":"322","messages":"323","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"321"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"349"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"321"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"321"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"321"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qz3qwt",{"filePath":"486","messages":"487","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"489"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"489"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"489"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"489"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"489"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"489"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"489"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"530"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"489"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"489"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/453543/spl-wallet-jodc/src/index.js",[],["647","648"],"/Users/453543/spl-wallet-jodc/src/App.js",["649","650","651","652","653","654","655"],"/Users/453543/spl-wallet-jodc/src/serviceWorker.js",[],"/Users/453543/spl-wallet-jodc/src/components/NavigationFrame.js",["656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673"],"import React, { useState, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, styled, useTheme } from '@material-ui/core/styles';\nimport { useConnectionConfig } from '../utils/connection';\nimport {CLUSTERS, clusterForEndpoint, getClusters, addCustomCluster, customClusterExists} from '../utils/clusters';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useWalletSelector } from '../utils/wallet';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddIcon from '@material-ui/icons/Add';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\nimport UsbIcon from '@material-ui/icons/Usb';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SolanaIcon from './SolanaIcon';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport AddAccountDialog from './AddAccountDialog';\nimport DeleteMnemonicDialog from './DeleteMnemonicDialog';\nimport AddHardwareWalletDialog from './AddHarwareWalletDialog';\nimport { ExportMnemonicDialog } from './ExportAccountDialog.js';\nimport { useWallet, WalletProvider } from '../utils/wallet';\n\nimport {\n  isExtension,\n  isExtensionPopup,\n  useIsExtensionWidth,\n} from '../utils/utils';\nimport ConnectionIcon from './ConnectionIcon';\nimport { Badge } from '@material-ui/core';\nimport { useConnectedWallets } from '../utils/connected-wallets';\nimport { usePage } from '../utils/page';\nimport { MonetizationOn, OpenInNew } from '@material-ui/icons';\nimport AddCustomClusterDialog from \"./AddCustomClusterDialog\";\n// Baz \nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Box from '@material-ui/core/Box';\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons'\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport IslamicIcon from './IslamicIcon';\nimport { Link } from \"react-router-dom\";\nimport InputLabel from '@material-ui/core/Select';\nimport { useTranslation } from \"react-i18next\";\nimport Paper from '@material-ui/core/Paper';\nconst drawerWidth = 240;\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\nconst useStyles = makeStyles((theme) => ({\n  /* @noflip */\n  content: {\n    flexGrow: 1,\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(theme.ext)]: {\n      paddingTop: theme.spacing(3),\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n  },\n  root: {\n    display: 'flex',\n  },\n  title: {\n    flexGrow: 3,\n  },\n  button: {\n    /* @noflip */\n    marginLeft: theme.spacing(1),\n  },\n  toolbar: theme.mixins.toolbar,\n  menuItemIcon: {\n    /* @noflip */\n    minWidth: 32,\n  },\n  badge: {\n    backgroundColor: theme.palette.success.main,\n    color: theme.palette.text.main,\n    height: 16,\n    width: 16,\n  },\n  appBar: {\n    /* @noflip */\n    postion: 'fixed',\n    \n\n  },\n  drawer: {\n    /* @noflip */\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    /* @noflip */\n    position: \"fixed\",\n    width: drawerWidth,\n    borderRadius: 0,\n    borderTop: \"none\",\n    background: theme.palette.primary.main,\n    borderBottom: \"none\",\n    top: theme.spacing(8), // push content down to fix scrollbar position\n      // subtract appbar height\n  },\n  drawerContent: {\n    overflow: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 4,\n  },\n  toolbar:\n  /* @noflip */\n   theme.mixins.toolbar,\n\n}));\nconst rtlLanguages = [\"ar\"];\nfunction setPageDirection(language) {\n  console.log(\"Lan language\"+language)\n  const dir = rtlLanguages.includes(language) ? \"rtl\" : \"ltr\"\n  console.log(\"Lan dir\"+dir)\n  document.documentElement.dir = dir\n}\nexport default function NavigationFrame({ children }) {\n  const theme = useTheme();\n  const classes = useStyles();\n  const isExtensionWidth = useIsExtensionWidth();\n  const {t} = useTranslation();\n  const wallet = useWallet();\n\n\n  const menuItems = [\n    { \n      text: 'Wallet', \n      icon: <TimelineIcon color=\"secondary\" fontSize=\"large\" />, \n      path: '/' \n    },\n    \n    { \n      text: 'Dashboard', \n      icon: <DashboardIcon color=\"secondary\" fontSize=\"large\" />, \n      path: '/Dashboard' \n    },\n    { \n      text: 'Invest', \n      icon: <AccountBalanceIcon color=\"secondary\" fontSize=\"large\" />, \n      path: '/Invest' \n    },\n   \n    { \n      text: 'Borrow', \n      icon: <PaymentIcon color=\"secondary\" fontSize=\"large\" />, \n      path: '/Borrow' \n    },\n  ];\n    const { i18n } = useTranslation();\n    const [language, setLanguage] = useState(\"id\");\n    \n    const [mobileOpen, setMobileOpen] = useState(false);\n    console.log(mobileOpen.toString() + \"<-- mobileOpen\")\n    if (!wallet)\n    {\n      console.log('no walett'); \n      \n    }else\n    {\n      console.log(' walett found'); \n    }\n    const handleDrawerToggle = () => {\n      setMobileOpen(!mobileOpen);\n      console.log(mobileOpen.toString() + \"<-- mobileOpen\")\n      };\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    const handleLangChange = evt => {\n    const lang = evt.target.value;\n    console.log(lang);\n    setLanguage(lang);\n    i18n.changeLanguage(lang);\n    setPageDirection(lang);\n  };\n  \n  \n  return (\n    <>\n\n      <AppBar position=\"fixed\" className={classes.appBar} \n          sx={{\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\n          ml: { sm: `${drawerWidth}px` },\n        }} >\n          \n        {!isExtension && (\n          <div\n            style={{\n              textAlign: 'center',\n              background: '#f4f4f4',\n              color: 'black',\n              paddingLeft: '24px',\n              paddingRight: '24px',\n              fontSize: '14px',\n            }}\n          >\n          \n          </div>\n        )}\n        <Toolbar>\n        <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: 'none' } }}\n          >\n            <MenuIcon />\n           </IconButton>\n         \n          \n\n        <br/>\n          <Typography variant=\"h6\" className={classes.title} component=\"h1\">\n                    \n            {t('IslamicCryptoFunding')}\n            \n\n          </Typography>\n          <NavigationButtons />\n          <select onChange={handleLangChange} value={language}>\n          <option value=\" \"> </option>\n            <option value=\"en\">EN</option>\n            <option value=\"ar\">AR</option>\n           \n          </select>\n        </Toolbar>\n      </AppBar>\n      <Paper>\n        <div className={classes.toolbar} />\n         \n      </Paper>\n      <Drawer\n      container={container}\n      \n      variant=\"persistent\"\n      anchor=\"left\"\n      open={!mobileOpen && wallet}\n      onClose={handleDrawerToggle}\n      elevation={0}\n      PaperProps={{\n      variant: \"outlined\"\n        }}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      containerStyle={{height: 'calc(100% - 64px)', top: 64}}\n      ModalProps={{\n        keepMounted: true, // Better open performance on mobile.\n      }}\n      sx={{\n        display: { xs: 'block', sm: 'none' },\n        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\n      }}  \n       \n      >\n      <DrawerHeader>\n       <IconButton color=\"secondary\" fontSize=\"large\" onClick={handleDrawerToggle}>\n         {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n       </IconButton>\n     </DrawerHeader>\n     <Divider />\n      <Toolbar />\n\n     <Box sx={{ overflow: 'auto' }}>\n          <List>\n          {menuItems.map((item) => (\n            <ListItem \n              button\n              component={Link} \n              key={item.text} \n              to={item.path}\n            >\n              <ListItemIcon style={{fill: \"gold\"}}>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} \n                            primaryTypographyProps={{\n                              color:'secondary', \n                              fontWeight:'large', \n                              variant: 'h5' \n                            }}\n              \n              \n              \n              />\n            </ListItem>\n          ))}\n          </List>\n           \n        </Box>\n      </Drawer>\n    \n      <main className={classes.content}>{children}</main>\n      {!isExtensionWidth && <Footer />}\n    </>\n  );\n}\n\n \n\nfunction NavigationButtons() {\n  const isExtensionWidth = useIsExtensionWidth();\n  const [page] = usePage();\n\n  if (isExtensionPopup) {\n    return null;\n  }\n\n  let elements = [];\n  if (page === 'wallet') {\n    elements = [\n      isExtension && <ConnectionsButton />,\n      <WalletSelector />,\n      <NetworkSelector />,\n    ];\n  } else if (page === 'connections') {\n    elements = [<WalletButton />];\n  }\n\n  if (isExtension && isExtensionWidth) {\n    elements.push(<ExpandButton />);\n  }\n\n  return elements;\n}\n\nfunction ExpandButton() {\n  const onClick = () => {\n    window.open(chrome.extension.getURL('index.html'), '_blank');\n  };\n\n  return (\n    <Tooltip title=\"Expand View\">\n      <IconButton color=\"inherit\" onClick={onClick}>\n        <OpenInNew />\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nfunction WalletButton() {\n  const classes = useStyles();\n  const setPage = usePage()[1];\n  const onClick = () => setPage('wallet');\n\n  return (\n    <>\n      <Hidden smUp>\n        <Tooltip title=\"Wallet Balances\">\n          <IconButton color=\"inherit\" onClick={onClick}>\n            <MonetizationOn />\n          </IconButton>\n        </Tooltip>\n      </Hidden>\n      <Hidden xsDown>\n        <Button color=\"inherit\" onClick={onClick} className={classes.button}>\n          Wallet\n        </Button>\n      </Hidden>\n    </>\n  );\n}\n\nfunction ConnectionsButton() {\n  const classes = useStyles();\n  const setPage = usePage()[1];\n  const onClick = () => setPage('connections');\n  const connectedWallets = useConnectedWallets();\n\n  const connectionAmount = Object.keys(connectedWallets).length;\n\n  return (\n    <>\n      <Hidden smUp>\n        <Tooltip title=\"Manage Connections\">\n          <IconButton color=\"inherit\" onClick={onClick}>\n            <Badge\n              badgeContent={connectionAmount}\n              classes={{ badge: classes.badge }}\n            >\n              <ConnectionIcon />\n            </Badge>\n          </IconButton>\n        </Tooltip>\n      </Hidden>\n      <Hidden xsDown>\n        <Badge\n          badgeContent={connectionAmount}\n          classes={{ badge: classes.badge }}\n        >\n          <Button color=\"inherit\" onClick={onClick} className={classes.button}>\n            Connections\n          </Button>\n        </Badge>\n      </Hidden>\n    </>\n  );\n}\n\nfunction NetworkSelector() {\n  const { endpoint, setEndpoint } = useConnectionConfig();\n  const cluster = useMemo(() => clusterForEndpoint(endpoint), [endpoint]);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [addCustomNetworkOpen, setCustomNetworkOpen] = useState(false);\n  const classes = useStyles();\n  const {t} = useTranslation();\n  \n\n  return (\n    <>\n      <AddCustomClusterDialog\n        open={addCustomNetworkOpen}\n        onClose={() => setCustomNetworkOpen(false)}\n        onAdd={({ name, apiUrl }) => {\n          addCustomCluster(name, apiUrl);\n          setCustomNetworkOpen(false);\n        }}\n      />\n      <Hidden xsDown>\n        <Button\n          color=\"inherit\"\n          onClick={(e) => setAnchorEl(e.target)}\n          className={classes.button}\n        >\n          {cluster?.label ?? t('Network')}\n        </Button>\n      </Hidden>\n      <Hidden smUp>\n        <Tooltip title= {t('SelectNetwork')} arrow>\n          <IconButton color=\"inherit\" onClick={(e) => setAnchorEl(e.target)}>\n            <SolanaIcon />\n          </IconButton>\n        </Tooltip>\n      </Hidden>\n      <Menu\n        anchorEl={anchorEl}\n        open={!!anchorEl}\n        onClose={() => setAnchorEl(null)}\n        anchorPosition={{ top: 100, left: 1700 }}\n        anchorReference=\"anchorPosition\"\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        getContentAnchorEl={null}\n      >\n        {getClusters().map((cluster) => (\n          <MenuItem\n            key={cluster.apiUrl}\n            onClick={() => {\n              setAnchorEl(null);\n              setEndpoint(cluster.apiUrl);\n            }}\n            selected={cluster.apiUrl === endpoint}\n          >\n            <ListItemIcon className={classes.menuItemIcon}>\n              {cluster.apiUrl === endpoint ? (\n                <CheckIcon fontSize=\"small\" />\n              ) : null}\n            </ListItemIcon>\n            {cluster.name === 'mainnet-beta-backup'\n              ? t('MainnetBetaBackup')\n              : cluster.apiUrl}\n              \n          </MenuItem>\n        ))}\n       \n      </Menu>\n    </>\n  );\n}\n\nfunction WalletSelector() {\n  const {t} = useTranslation();\n  const {\n    accounts,\n    derivedAccounts,\n    hardwareWalletAccount,\n    setHardwareWalletAccount,\n    setWalletSelector,\n    addAccount,\n  } = useWalletSelector();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [addAccountOpen, setAddAccountOpen] = useState(false);\n  const [\n    addHardwareWalletDialogOpen,\n    setAddHardwareWalletDialogOpen,\n  ] = useState(false);\n  const [deleteMnemonicOpen, setDeleteMnemonicOpen] = useState(false);\n  const [exportMnemonicOpen, setExportMnemonicOpen] = useState(false);\n  const classes = useStyles();\n \n  if (accounts.length === 0) {\n    return null;\n  }\n  return (\n    <>\n      <AddHardwareWalletDialog\n        open={addHardwareWalletDialogOpen}\n        onClose={() => setAddHardwareWalletDialogOpen(false)}\n        onAdd={({ publicKey, derivationPath, account, change }) => {\n          setHardwareWalletAccount({\n            name: t('HardwareWallet'),\n            publicKey,\n            importedAccount: publicKey.toString(),\n            ledger: true,\n            derivationPath,\n            account,\n            change,\n          });\n          setWalletSelector({\n            walletIndex: undefined,\n            importedPubkey: publicKey.toString(),\n            ledger: true,\n            derivationPath,\n            account,\n            change,\n          });\n        }}\n      />\n      <AddAccountDialog\n        open={addAccountOpen}\n        onClose={() => setAddAccountOpen(false)}\n        onAdd={({ name, importedAccount }) => {\n          addAccount({ name, importedAccount });\n          setWalletSelector({\n            walletIndex: importedAccount ? undefined : derivedAccounts.length,\n            importedPubkey: importedAccount\n              ? importedAccount.publicKey.toString()\n              : undefined,\n            ledger: false,\n          });\n          setAddAccountOpen(false);\n        }}\n      />\n      <ExportMnemonicDialog\n        open={exportMnemonicOpen}\n        onClose={() => setExportMnemonicOpen(false)}\n      />\n      <DeleteMnemonicDialog\n        open={deleteMnemonicOpen}\n        onClose={() => setDeleteMnemonicOpen(false)}\n      />\n      <Hidden xsDown>\n        <Button\n          color=\"inherit\"\n          onClick={(e) => setAnchorEl(e.target)}\n          className={classes.button}\n        >\n          {t(\"Account\")}\n        </Button>\n      </Hidden>\n      <Hidden smUp>\n        <Tooltip title= {t('SelectAccount')} arrow>\n          <IconButton color=\"inherit\" onClick={(e) => setAnchorEl(e.target)}>\n            <AccountIcon />\n          </IconButton>\n        </Tooltip>\n      </Hidden>\n      <Menu\n        anchorEl={anchorEl}\n        open={!!anchorEl}\n        onClose={() => setAnchorEl(null)}\n        anchorPosition={{ top: 100, left: 1200 }}\n        anchorReference=\"anchorPosition\"\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        getContentAnchorEl={null}\n      >\n        {accounts.map((account) => (\n          <AccountListItem\n            account={account}\n            classes={classes}\n            setAnchorEl={setAnchorEl}\n            setWalletSelector={setWalletSelector}\n          />\n        ))}\n        {hardwareWalletAccount && (\n          <>\n            <Divider />\n            <AccountListItem\n              account={hardwareWalletAccount}\n              classes={classes}\n              setAnchorEl={setAnchorEl}\n              setWalletSelector={setWalletSelector}\n            />\n          </>\n        )}\n        <Divider />\n        <MenuItem onClick={() => setAddHardwareWalletDialogOpen(true)}>\n          <ListItemIcon className={classes.menuItemIcon}>\n            <UsbIcon fontSize=\"small\" />\n          </ListItemIcon>\n          {t('ImportHardwareWallet')}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setAnchorEl(null);\n            setAddAccountOpen(true);\n          }}\n        >\n          <ListItemIcon className={classes.menuItemIcon}>\n            <AddIcon fontSize=\"small\" />\n          </ListItemIcon>\n          {t('AddAccount')}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setAnchorEl(null);\n            setExportMnemonicOpen(true);\n          }}\n        >\n          <ListItemIcon className={classes.menuItemIcon}>\n            <ImportExportIcon fontSize=\"small\" />\n          </ListItemIcon>\n          {t('ExportMnemonic')}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setAnchorEl(null);\n            setDeleteMnemonicOpen(true);\n          }}\n        >\n          <ListItemIcon className={classes.menuItemIcon}>\n            <ExitToApp fontSize=\"small\" />\n          </ListItemIcon>\n          {t('DeleteMnemonicLogOut')}\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nconst useFooterStyles = makeStyles((theme) => ({\n  footer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: theme.spacing(2),\n  },\n}));\n\nfunction Footer() {\n  const classes = useFooterStyles();\n  const {t} = useTranslation();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography>\n        {t('RayaSoftwareSystems')} {\"©\"}\n      </Typography>\n    </footer>\n  );\n}\n\nfunction AccountListItem({ account, classes, setAnchorEl, setWalletSelector }) {\n  return (\n    <MenuItem\n      key={account.address.toBase58()}\n      onClick={() => {\n        setAnchorEl(null);\n        setWalletSelector(account.selector);\n      }}\n      selected={account.isSelected}\n      component=\"div\"\n    >\n      <ListItemIcon className={classes.menuItemIcon}>\n        {account.isSelected ? <CheckIcon fontSize=\"small\" /> : null}\n      </ListItemIcon>\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <Typography>{account.name}</Typography>\n        <Typography color=\"textSecondary\">\n          {account.address.toBase58()}\n        </Typography>\n      </div>\n    </MenuItem>\n  );\n}\n","/Users/453543/spl-wallet-jodc/src/components/DialogForm.js",[],"/Users/453543/spl-wallet-jodc/src/components/LoadingIndicator.js",[],"/Users/453543/spl-wallet-jodc/src/utils/page.js",[],"/Users/453543/spl-wallet-jodc/src/utils/connected-wallets.js",[],"/Users/453543/spl-wallet-jodc/src/pages/WalletPage.js",[],"/Users/453543/spl-wallet-jodc/src/pages/PopupPage.js",[],"/Users/453543/spl-wallet-jodc/src/pages/LoginPage.js",[],"/Users/453543/spl-wallet-jodc/src/utils/tokens/names.js",[],"/Users/453543/spl-wallet-jodc/src/pages/ConnectionsPage.js",[],"/Users/453543/spl-wallet-jodc/src/utils/utils.ts",[],["674","675"],"/Users/453543/spl-wallet-jodc/src/utils/connection.tsx",[],"/Users/453543/spl-wallet-jodc/src/components/ExportAccountDialog.js",[],"/Users/453543/spl-wallet-jodc/src/components/BalancesList.js",["676","677","678"],"/Users/453543/spl-wallet-jodc/src/utils/walletProvider/localStorage.js",[],"/Users/453543/spl-wallet-jodc/src/components/AddAccountDialog.js",[],"/Users/453543/spl-wallet-jodc/src/utils/clusters.js",[],"/Users/453543/spl-wallet-jodc/src/components/ConnectionIcon.js",[],"/Users/453543/spl-wallet-jodc/src/components/AddHarwareWalletDialog.js",[],"/Users/453543/spl-wallet-jodc/src/components/DeleteMnemonicDialog.js",[],"/Users/453543/spl-wallet-jodc/src/components/SolanaIcon.js",[],"/Users/453543/spl-wallet-jodc/src/components/AddCustomClusterDialog.js",[],"/Users/453543/spl-wallet-jodc/src/utils/tokens/instructions.js",[],"/Users/453543/spl-wallet-jodc/src/utils/tokens/data.js",[],"/Users/453543/spl-wallet-jodc/src/utils/wallet-seed.js",[],"/Users/453543/spl-wallet-jodc/src/components/DebugButtons.js",[],"/Users/453543/spl-wallet-jodc/src/components/ConnectionsList.js",[],"/Users/453543/spl-wallet-jodc/src/utils/notifications.js",[],"/Users/453543/spl-wallet-jodc/src/utils/walletProvider/factory.js",[],"/Users/453543/spl-wallet-jodc/src/utils/fetch-loop.ts",[],"/Users/453543/spl-wallet-jodc/src/components/SignTransactionFormContent.js",[],"/Users/453543/spl-wallet-jodc/src/components/SignFormContent.js",[],"/Users/453543/spl-wallet-jodc/src/components/SwapButton.js",[],"/Users/453543/spl-wallet-jodc/src/components/MergeAccountsDialog.js",[],"/Users/453543/spl-wallet-jodc/src/utils/walletProvider/ledger.js",[],"/Users/453543/spl-wallet-jodc/src/components/DomainsList.tsx",[],"/Users/453543/spl-wallet-jodc/src/utils/tokens/index.js",[],"/Users/453543/spl-wallet-jodc/src/components/instructions/UnknownInstruction.js",[],"/Users/453543/spl-wallet-jodc/src/components/instructions/DexInstruction.js",[],"/Users/453543/spl-wallet-jodc/src/components/instructions/TokenInstruction.js",[],"/Users/453543/spl-wallet-jodc/src/components/instructions/NewOrder.js",[],"/Users/453543/spl-wallet-jodc/src/components/instructions/SystemInstruction.js",[],"/Users/453543/spl-wallet-jodc/src/components/instructions/StakeInstruction.js",[],"/Users/453543/spl-wallet-jodc/src/utils/transactions.ts",[],"/Users/453543/spl-wallet-jodc/src/utils/walletProvider/ledger-core.js",[],"/Users/453543/spl-wallet-jodc/src/components/instructions/LabelValue.js",[],"/Users/453543/spl-wallet-jodc/src/utils/name-service/index.ts",[],"/Users/453543/spl-wallet-jodc/src/components/EditAccountNameDialog.js",[],"/Users/453543/spl-wallet-jodc/src/components/TokenIcon.js",[],"/Users/453543/spl-wallet-jodc/src/utils/config.js",[],"/Users/453543/spl-wallet-jodc/src/components/CloseTokenAccountButton.js",[],"/Users/453543/spl-wallet-jodc/src/utils/swap/api.js",[],"/Users/453543/spl-wallet-jodc/src/utils/markets.ts",["679"],"import { MARKETS } from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport { MAINNET_URL } from './connection';\n\ninterface Markets {\n  [coin: string]: {\n    publicKey: PublicKey;\n    name: string;\n    deprecated?: boolean;\n  };\n}\n\nexport const serumMarkets = (() => {\n  const m: Markets = {};\n  MARKETS.forEach((market) => {\n    const coin = market.name.split('/')[0];\n    \n    if (m[coin]) {\n      // Only override a market if it's not deprecated\t.\n      if (!m.deprecated) {\n        m[coin] = {\n          publicKey: market.address,\n          name: market.name.split('/').join(''),\n        };\n      }\n    } else {\n      m[coin] = {\n        publicKey: market.address,\n        name: market.name.split('/').join(''),\n      };\n    }\n  });\n  return m;\n})();\n\n// Create a cached API wrapper to avoid rate limits.\nclass PriceStore {\n  cache: {};\n\n  constructor() {\n    this.cache = {};\n  }\n\n  async getPrice(connection, marketName): Promise<number | undefined> {\n    return new Promise((resolve, reject) => {\n     \n      if (this.cache[marketName] === undefined) {\n        fetch(`https://serum-api.bonfida.com/orderbooks/SOLUSDT`).then(\n          (resp) => {\n            resp.json().then((resp) => {\n              if (resp.data.asks === null || resp.data.bids === null) {\n                resolve(undefined);\n              } else if (\n                resp.data.asks.length === 0 &&\n                resp.data.bids.length === 0\n              ) {\n                resolve(undefined);\n              } else if (resp.data.asks.length === 0) {\n                resolve(resp.data.bids[0].price);\n              } else if (resp.data.bids.length === 0) {\n                resolve(resp.data.asks[0].price);\n              } else {\n                const mid =\n                  (resp.data.asks[0].price + resp.data.bids[0].price) / 2.0;\n                  console.log(\"mid \"+ mid)\n                this.cache[marketName] = mid;\n                resolve(this.cache[marketName]);\n              }\n            });\n          },\n        );\n      } else {\n        return resolve(this.cache[marketName]);\n      }\n    });\n  }\n  async getPoolVolume(connection, marketName): Promise<number | undefined> {\n    return new Promise((resolve, reject) => {\n     \n      if (this.cache[marketName] === undefined) {\n        fetch(`https://serum-api.bonfida.com/volumes/SOLUSDT`).then(\n          (resp) => {\n           \n            resp.json().then((resp) => {\n              \n              const vol = JSON.stringify(resp.data[0].volumeUsd) ;\n               console.log(\"vol \"+ vol)\n              \n              if (resp.data === null || resp.data === null) {\n                resolve(undefined);\n              } else if (\n                resp.data === 0 &&\n                resp.data === 0\n              ) {\n                resolve(undefined);\n              } else {\n                const vol = resp.data[0].volumeUsd ;\n                  console.log(\"vol \"+ vol)\n                this.cache[marketName] = vol;\n                resolve(this.cache[marketName]);\n              }\n              \n            });\n          },\n        );\n      } else {\n        return resolve(this.cache[marketName]);\n      }\n    });\n  }\n}\n\nexport const priceStore = new PriceStore();\n","/Users/453543/spl-wallet-jodc/src/components/SendDialog.js",[],"/Users/453543/spl-wallet-jodc/src/components/DepositDialog.js",[],"/Users/453543/spl-wallet-jodc/src/utils/region.ts",[],"/Users/453543/spl-wallet-jodc/src/components/AddTokenDialog.js",[],"/Users/453543/spl-wallet-jodc/src/components/TokenInfoDialog.js",[],"/Users/453543/spl-wallet-jodc/src/components/FtxPay/FtxPayDialog.js",[],"/Users/453543/spl-wallet-jodc/src/utils/swap/eth.js",[],"/Users/453543/spl-wallet-jodc/src/components/CopyableDisplay.js",[],"/Users/453543/spl-wallet-jodc/src/components/EthFeeEstimate.tsx",[],"/Users/453543/spl-wallet-jodc/src/components/IslamicIcon.js",[],"/Users/453543/spl-wallet-jodc/src/pages/Dashboard.js",["680","681","682","683","684","685","686","687"],"import React, { useCallback, useState} from 'react'\n\nimport Deposits from './Deposits';\nimport Typography from '@mui/material/Typography';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Container from '@material-ui/core/Container';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@mui/material/Paper';\nimport balanceInfo from '../components/BalancesList'\nimport { useConnection } from '../utils/connection';\nimport { priceStore } from '../utils/markets';\nimport { useTranslation } from 'react-i18next';\nimport NumberFormat from 'react-number-format';\nimport { PieChart, Pie, Sector, Legend } from 'recharts';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Popover from '@mui/material/Popover';\n\nconst data = [\n  { name: 'SOL', value: 600 },\n  { name: 'USDT', value: 300 },\n  { name: 'JODC', value: 1000 },\n  { name: 'BTC', value: 600 },\n];\n\nconst rows: GridRowsProp = [\n  { id: 1, col1: 'Hello', col2: 'World' },\n  { id: 2, col1: 'DataGridPro', col2: 'is Awesome' },\n  { id: 3, col1: 'MUI', col2: 'is Amazing' },\n];\n\nconst columns: GridColDef[] = [\n  { field: 'col1', headerName: 'Column 1', width: 150 },\n  { field: 'col2', headerName: 'Column 2', width: 150 },\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n      [theme.breakpoints.down(theme.ext)]: {\n        padding: 0,\n      },\n      [theme.breakpoints.up(theme.ext)]: {\n        maxWidth: 'md',\n      },\n    },\n    balancesContainer: {\n      [theme.breakpoints.down(theme.ext)]: {\n        marginBottom: 24,\n      },\n    },\n  }));\n\n\n  const renderActiveShape = (props: any) => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill,\n      payload,\n      percent,\n      value\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? \"start\" : \"end\";\n    \n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n          {payload.name}\n        </text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path\n          d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n          stroke={fill}\n          fill=\"none\"\n        />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          textAnchor={textAnchor}\n          fill=\"#333\"\n        >{`APR ${value}`}</text>\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          dy={18}\n          textAnchor={textAnchor}\n          fill=\"#999\"\n        >\n          {`(Rate ${(percent * 100).toFixed(2)}%)`}\n        </text>\n      </g>\n    );\n  };\n  \n\nexport default function Dashboard() {\n  //popover \n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  //popover\n  const classes = useStyles();\n  const [poolVolume, setPoolVolume] = useState(undefined);\n  const connection = useConnection();\n  const {t} = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const onPieEnter = useCallback(\n    (_, index) => {\n      setActiveIndex(index);\n    },\n    [setActiveIndex]\n  );\n\n  let m = \"SOLUSDT\";\n        priceStore\n        .getPoolVolume(connection, m)\n        .then((poolVolume) => {\n        \n          setPoolVolume(poolVolume)\n          console.log(\"Dashboard Price \" + poolVolume);\n        })\n        .catch((err) => {\n          console.error(err);\n           \n        });\n        const borrowed= 50000\n        const lentout = borrowed/poolVolume\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" >\n         <CssBaseline />\n         <Container>\n\n      <Grid container rowSpacing={3} columnSpacing={{ xs: 1, sm: 2, md: 3 }} justifyContent=\"flex-end\" >\n        <Grid item xs={12} sm={12} md={3} xl={3}>\n        <Card sx={{ minWidth: 240 }} elevation={5}>\n              <CardContent>\n                <Typography component=\"h1\"\n                                    variant=\"h6\"\n                                    color=\"inherit\"\n                                    noWrap\n                                    sx={{ flexGrow: 15 }}\n                                  >\n                  {t('CurrentMarketSize')}\n                </Typography>\n                <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                color=\"secondary\" \n                noWrap\n                sx={{ flexGrow: 15 }}\n                >\n                {poolVolume}\n                </Typography>\n                                        \n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" href=\"https://solanascan.io/\">Learn More</Button>\n              </CardActions>\n            </Card>  \n        </Grid>\n        <Grid item xs={12} sm={12} md={3} xl={3}>\n        <Card sx={{ minWidth: 240 }} elevation={5} >\n              <CardContent>\n                <Typography component=\"h1\"\n                                    variant=\"h6\"\n                                    color=\"inherit\"\n                                    noWrap\n                                    sx={{ flexGrow: 15 }}\n                                  >\n                {t('TotalBorrowed')}\n                </Typography>\n                <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                color=\"secondary\" \n                noWrap\n                sx={{ flexGrow: 15 }}\n                >\n                 <NumberFormat value={2456981} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                 </Typography>\n                                        \n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" onClick={handleClick} >Learn More</Button>\n                    <Popover\n                      id={id}\n                      open={open}\n                      anchorEl={anchorEl}\n                      onClose={handleClose}\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                      }}\n                    >\n\n                    <Typography sx={{ p: 2 }}>{t('borrowing')}</Typography>\n\n\n                    </Popover>\n              </CardActions>\n            </Card>   \n        </Grid>\n        <Grid item xs={12} sm={12} md={3} xl={3}>\n        <Card sx={{ minWidth: 240 }} elevation={5}>\n              <CardContent>\n                <Typography component=\"h1\"\n                                    variant=\"h6\"\n                                    color=\"inherit\"\n                                    noWrap\n                                    sx={{ flexGrow: 15 }}\n                                  >\n                {t('lentout')}\n                </Typography>\n                <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                color=\"secondary\" \n                noWrap\n                sx={{ flexGrow: 15 }}\n                >\n          \n            <NumberFormat value={lentout * 100} decimalScale={2} displayType={'text'} thousandSeparator={true} prefix={'%'} />\n\n                </Typography>\n                                        \n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" href={'/DemoDashboard'} >Learn More</Button>\n              </CardActions>\n            </Card>  \n        </Grid>\n     \n        <Grid item xs={12} sm={12} md={9} xl={9}>\n                <Card elevation={5}>\n                      <CardContent>\n                        <Typography component=\"h1\"\n                                            variant=\"h6\"\n                                            align =\"Center\"\n                                            color=\"inherit\"\n                                            noWrap\n                                            sx={{ flexGrow: 15 }}\n                                          >\n                        {t('marketComposition')}\n                        \n                        </Typography>\n                         \n                        <PieChart width={700} height={400} align=\"center\" margin={{\n                    top: 5, right: 30, left: 60, bottom: 5,\n                }}>\n                                  <Pie\n                                    activeIndex={activeIndex}\n                                    activeShape={renderActiveShape}\n                                    data={data}\n                                    cx={200}\n                                    cy={200}\n                                    innerRadius={60}\n                                    outerRadius={100}\n                                    fill=\"#003E00\"\n                                    dataKey=\"value\"\n                                    onMouseEnter={onPieEnter}\n                                  />\n                                  <Legend\n                                  payload={\n                                    data.map(\n                                      (item, index) => ({\n                                        id: item.name,\n                                        type: \"square\",\n                                        value: `${item.name} (${item.value}%)`,\n\n                                      })\n                                    )\n                                  }\n                                  margin={{\n                                    top: 5, right: 30, left: 260, bottom: 5,\n                                }}\n                                />\n                                </PieChart>         \n                               \n                      </CardContent>\n                       \n                    </Card>  \n        </Grid>\n      </Grid>\n      </Container>\n      </Box>\n    )\n\n                }","/Users/453543/spl-wallet-jodc/src/pages/Invest.js",[],"/Users/453543/spl-wallet-jodc/src/utils/wallet.js",[],"/Users/453543/spl-wallet-jodc/src/pages/Borrow.js",[],"/Users/453543/spl-wallet-jodc/src/pages/Deposits.js",["688","689","690"],"import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nexport default function Deposits() {\n  const currentDateTime = Date().toLocaleString()\n  var today = new Date(),\n\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n  return (\n    <React.Fragment>\n      <Title>Total Value Deposited</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $12,970,612.59\n      </Typography>\n      <Typography color=\"text.secondary\" sx={{ flex: 1 }}>\n        {date}\n      </Typography>\n      <div>\n       \n      </div>\n    </React.Fragment>\n  );\n}","/Users/453543/spl-wallet-jodc/src/pages/Orders.js",[],"/Users/453543/spl-wallet-jodc/src/pages/Chart.js",[],"/Users/453543/spl-wallet-jodc/src/pages/Title.js",[],"/Users/453543/spl-wallet-jodc/src/pages/listItems.js",[],"/Users/453543/spl-wallet-jodc/src/pages/DemoDashboard.js",["691","692","693","694","695","696"],"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Link from '@mui/material/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Chart from './Chart';\nimport Deposits from './Deposits';\nimport Orders from './Orders';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: 'border-box',\n      ...(!open && {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }),\n);\n\nconst mdTheme = createTheme();\n\nfunction DashboardContent() {\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: '24px', // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: '36px',\n                ...(open && { display: 'none' }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n         \n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'light'\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: '100vh',\n            overflow: 'auto',\n          }}\n        >\n          <Toolbar />\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Grid container spacing={3}>\n              {/* Chart */}\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 240,\n                  }}\n                >\n                  <Chart />\n                </Paper>\n              </Grid>\n              {/* Recent Deposits */}\n              <Grid item xs={12} md={4} lg={3}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 240,\n                  }}\n                >\n                  <Deposits />\n                </Paper>\n              </Grid>\n              {/* Recent Orders */}\n              <Grid item xs={12}>\n                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n                  <Orders />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Copyright sx={{ pt: 4 }} />\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default function DemoDashboard() {\n  return <DashboardContent />;\n}","/Users/453543/spl-wallet-jodc/src/translations/english/translations.js",[],"/Users/453543/spl-wallet-jodc/src/translations/arabic/translations.js",[],"/Users/453543/spl-wallet-jodc/src/i18n.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/index.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/App.js",["697","698","699","700","701","702","703"],"import React, { Suspense, useState } from 'react';\nimport { makeStyles, List, ListItem } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  ThemeProvider,\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n} from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DialogForm from './components/DialogForm';\nimport NavigationFrame from './components/NavigationFrame';\nimport { ConnectionProvider } from './utils/connection';\nimport WalletPage from './pages/WalletPage';\nimport { useWallet, WalletProvider } from './utils/wallet';\nimport { ConnectedWalletsProvider } from './utils/connected-wallets';\nimport { TokenRegistryProvider } from './utils/tokens/names';\nimport LoadingIndicator from './components/LoadingIndicator';\nimport { SnackbarProvider } from 'notistack';\nimport PopupPage from './pages/PopupPage';\nimport LoginPage from './pages/LoginPage';\nimport ConnectionsPage from './pages/ConnectionsPage';\nimport { isExtension } from './utils/utils';\nimport { PageProvider, usePage } from './utils/page';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport Invest from './pages/Invest';\nimport Borrow from './pages/Borrow';\nimport DemoDashboard from './pages/DemoDashboard';\nimport { useTranslation } from 'react-i18next';\nimport { arSD } from '@mui/material/locale';\n\nexport default function App() {\n  // TODO: add toggle for dark mode\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: '#003E00',\n          },\n          secondary: { main: '#FFFFFF' },\n        },\n        // TODO consolidate popup dimensions\n        ext: '450',\n        arSD,\n      }),\n    [prefersDarkMode],\n  );\n\n  let appElement = (\n    <NavigationFrame>\n      <Suspense fallback={<LoadingIndicator />}>\n        <div> Welcome </div>\n        <PageContents />\n      </Suspense>\n    </NavigationFrame>\n  );\n\n  if (isExtension) {\n    appElement = (\n      <ConnectedWalletsProvider>\n        <PageProvider>{appElement}</PageProvider>\n      </ConnectedWalletsProvider>\n    );\n  }\n\n  return (\n    <Suspense fallback={<LoadingIndicator />}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <ConnectionProvider>\n          <TokenRegistryProvider>\n            <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n              <WalletProvider>\n                <Router>\n                  <NavigationFrame>\n                    <Switch>\n                      <Route exact path=\"/\">\n                        <Suspense fallback={<LoadingIndicator />}>\n                          <PageContents />\n                        </Suspense>\n                      </Route>\n\n                      <Route path=\"/Dashboard\">\n                        <Dashboard />\n                      </Route>\n                      <Route path=\"/DemoDashboard\">\n                        <DemoDashboard />\n                      </Route>\n                      <Route path=\"/Borrow\">\n                        <Borrow />\n                      </Route>\n                    </Switch>\n                  </NavigationFrame>\n                </Router>\n              </WalletProvider>\n            </SnackbarProvider>\n          </TokenRegistryProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n    </Suspense>\n  );\n}\n\nfunction PageContents() {\n  const wallet = useWallet();\n  const [page] = usePage();\n  const [showWalletSuggestion, setShowWalletSuggestion] = useState(true);\n  const suggestionKey = 'private-irgnore-wallet-suggestion';\n  const ignoreSuggestion = window.localStorage.getItem(suggestionKey);\n\n  console.log('Baz working start');\n  if (!wallet) {\n    return (\n      <>\n        {!ignoreSuggestion && (\n          <WalletSuggestionDialog\n            open={showWalletSuggestion}\n            onClose={() => setShowWalletSuggestion(false)}\n            onIgnore={() => {\n              window.localStorage.setItem(suggestionKey, true);\n              setShowWalletSuggestion(false);\n            }}\n          />\n        )}\n        <LoginPage />\n      </>\n    );\n  }\n  if (window.opener) {\n    return <PopupPage opener={window.opener} />;\n  }\n  if (page === 'wallet') {\n    return <WalletPage />;\n  } else if (page === 'connections') {\n    return <ConnectionsPage />;\n  }\n}\n\nconst useStyles = makeStyles(() => ({\n  walletButton: {\n    width: '100%',\n    padding: '16px',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nfunction WalletSuggestionDialog({ open, onClose, onIgnore }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  return (\n    <DialogForm open={open} onClose={onClose} fullWidth>\n      <DialogTitle>{t('LookingforaWallet')}</DialogTitle>\n      <DialogContent>\n        <Typography>{t('connectWalletText')}</Typography>\n        <List disablePadding style={{ marginTop: '16px' }}>\n          <ListItem button disablePadding style={{ padding: 0 }}>\n            <div\n              className={classes.walletButton}\n              style={{ display: 'flex' }}\n              onClick={() => {\n                window.location = 'https://phantom.app/';\n              }}\n            >\n              <div>\n                // eslint-disable-next-line\n                <img\n                  style={{ height: '39px' }}\n                  src=\"https://raw.githubusercontent.com/solana-labs/wallet-adapter/master/packages/wallets/icons/phantom.svg\"\n                />\n              </div>\n              <div>\n                <Typography\n                  style={{\n                    marginLeft: '16px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    flexDirection: 'column',\n                    height: '39px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Phantom\n                </Typography>\n              </div>\n            </div>\n          </ListItem>\n          <ListItem button disablePadding style={{ padding: 0 }}>\n            <div\n              onClick={() => {\n                window.location = 'https://solflare.com/';\n              }}\n              className={classes.walletButton}\n              style={{ display: 'flex' }}\n            >\n              <div>\n                <img\n                  style={{ height: '39px' }}\n                  src=\"https://raw.githubusercontent.com/solana-labs/wallet-adapter/master/packages/wallets/icons/solflare.svg\"\n                />\n              </div>\n              // eslint-disable-next-line\n              <div>\n                <Typography\n                  style={{\n                    marginLeft: '16px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    flexDirection: 'column',\n                    height: '39px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Solflare\n                </Typography>\n              </div>\n            </div>\n          </ListItem>\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button type=\"submit\" color=\"primary\" onClick={onIgnore}>\n          {t('IgnoreFutureDialog')}\n        </Button>\n        <Button type=\"submit\" color=\"primary\" onClick={onClose}>\n          {t('ok')}\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n",["704","705"],"/Users/453543/drawer/spl-wallet-jodc/src/serviceWorker.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/DialogForm.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/LoadingIndicator.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/NavigationFrame.js",["706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723"],"/Users/453543/drawer/spl-wallet-jodc/src/utils/wallet.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/connected-wallets.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/page.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/ConnectionsPage.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/WalletPage.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/PopupPage.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/Borrow.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/LoginPage.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/Invest.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/Dashboard.js",["724","725","726","727","728","729","730","731"],"/Users/453543/drawer/spl-wallet-jodc/src/pages/DemoDashboard.js",["732","733","734","735","736","737"],"/Users/453543/drawer/spl-wallet-jodc/src/utils/tokens/names.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/translations/english/translations.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/translations/arabic/translations.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/utils.ts",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/connection.tsx",[],["738","739"],"/Users/453543/drawer/spl-wallet-jodc/src/components/ExportAccountDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/SolanaIcon.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/clusters.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/AddAccountDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/DeleteMnemonicDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/ConnectionIcon.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/AddHarwareWalletDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/AddCustomClusterDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/IslamicIcon.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/Deposits.js",["740","741","742"],"import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nexport default function Deposits() {\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"text.secondary\" sx={{ flex: 1 }}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","/Users/453543/drawer/spl-wallet-jodc/src/pages/Chart.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/Orders.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/listItems.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/wallet-seed.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/fetch-loop.ts",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/BalancesList.js",["743","744","745"],"import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  refreshWalletPublicKeys,\n  useBalanceInfo,\n  useWallet,\n  useWalletPublicKeys,\n  useWalletSelector,\n} from '../utils/wallet';\nimport { findAssociatedTokenAddress } from '../utils/tokens';\nimport LoadingIndicator from './LoadingIndicator';\nimport Collapse from '@material-ui/core/Collapse';\nimport { Typography } from '@material-ui/core';\nimport TokenInfoDialog from './TokenInfoDialog';\nimport FtxPayDialog from './FtxPay/FtxPayDialog';\nimport Link from '@material-ui/core/Link';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { abbreviateAddress, useIsExtensionWidth } from '../utils/utils';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport ReceiveIcon from '@material-ui/icons/WorkOutline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AddIcon from '@material-ui/icons/Add';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport MergeType from '@material-ui/icons/MergeType';\nimport SortIcon from '@material-ui/icons/Sort';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddTokenDialog from './AddTokenDialog';\nimport ExportAccountDialog from './ExportAccountDialog';\nimport ftxPayIcon from './FtxPay/icon.png';\nimport SendDialog from './SendDialog';\nimport DepositDialog from './DepositDialog';\nimport {\n  useIsProdNetwork,\n  refreshAccountInfo,\n  useSolanaExplorerUrlSuffix,\n} from '../utils/connection';\nimport { useRegion } from '../utils/region';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { serumMarkets, priceStore } from '../utils/markets';\nimport { swapApiRequest } from '../utils/swap/api';\nimport { showSwapAddress } from '../utils/config';\nimport { useAsyncData } from '../utils/fetch-loop';\nimport { showTokenInfoDialog } from '../utils/config';\nimport { useConnection } from '../utils/connection';\nimport { shortenAddress } from '../utils/utils';\nimport CloseTokenAccountDialog from './CloseTokenAccountButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport TokenIcon from './TokenIcon';\nimport EditAccountNameDialog from './EditAccountNameDialog';\nimport MergeAccountsDialog from './MergeAccountsDialog';\nimport SwapButton from './SwapButton';\nimport DnsIcon from '@material-ui/icons/Dns';\nimport DomainsList from './DomainsList';\n\nimport { useTranslation } from \"react-i18next\";\nconst balanceFormat = new Intl.NumberFormat(undefined, {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4,\n  useGrouping: true,\n});\n\nconst SortAccounts = {\n  None: 0,\n  Ascending: 1,\n  Descending: 2,\n};\n\n// Aggregated $USD values of all child BalanceListItems child components.\n//\n// Values:\n// * undefined => loading.\n// * null => no market exists.\n// * float => done.\n//\n// For a given set of publicKeys, we know all the USD values have been loaded when\n// all of their values in this object are not `undefined`.\nconst usdValues = {};\n\n// Calculating associated token addresses is an asynchronous operation, so we cache\n// the values so that we can quickly render components using them. This prevents\n// flickering for the associated token fingerprint icon.\nconst associatedTokensCache = {};\n\nconst numberFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n\nfunction fairsIsLoaded(publicKeys) {\n  return (\n    publicKeys.filter((pk) => usdValues[pk.toString()] !== undefined).length ===\n    publicKeys.length\n  );\n}\n\nexport default function BalancesList() {\n  const wallet = useWallet();\n  const [publicKeys, loaded] = useWalletPublicKeys();\n  const [showAddTokenDialog, setShowAddTokenDialog] = useState(false);\n  const [showEditAccountNameDialog, setShowEditAccountNameDialog] = useState(\n    false,\n  );\n  const [showMergeAccounts, setShowMergeAccounts] = useState(false);\n  const [showFtxPayDialog, setShowFtxPayDialog] = useState(false);\n  const [sortAccounts, setSortAccounts] = useState(SortAccounts.None);\n  const [showDomains, setShowDomains] = useState(false);\n  const { accounts, setAccountName } = useWalletSelector();\n  const [isCopied, setIsCopied] = useState(false);\n  const isExtensionWidth = useIsExtensionWidth();\n  // Dummy var to force rerenders on demand.\n  const [, setForceUpdate] = useState(false);\n  const region = useRegion();\n  const selectedAccount = accounts.find((a) => a.isSelected);\n  const allTokensLoaded = loaded && fairsIsLoaded(publicKeys);\n  let sortedPublicKeys = publicKeys;\n  if (allTokensLoaded && sortAccounts !== SortAccounts.None) {\n    sortedPublicKeys = [...publicKeys];\n    sortedPublicKeys.sort((a, b) => {\n      const aVal = usdValues[a.toString()];\n      const bVal = usdValues[b.toString()];\n\n      a = aVal === undefined || aVal === null ? -1 : aVal;\n      b = bVal === undefined || bVal === null ? -1 : bVal;\n      if (sortAccounts === SortAccounts.Descending) {\n        if (a < b) {\n          return -1;\n        } else if (a > b) {\n          return 1;\n        } else {\n          return 0;\n        }\n      } else {\n        if (b < a) {\n          return -1;\n        } else if (b > a) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }\n    });\n  }\n  const totalUsdValue = publicKeys\n    .filter((pk) => usdValues[pk.toString()])\n    .map((pk) => usdValues[pk.toString()])\n    .reduce((a, b) => a + b, 0.0);\n\n  // Memoized callback and component for the `BalanceListItems`.\n  //\n  // The `BalancesList` fetches data, e.g., fairs for tokens using React hooks\n  // in each of the child `BalanceListItem` components. However, we want the\n  // parent component, to aggregate all of this data together, for example,\n  // to show the cumulative USD amount in the wallet.\n  //\n  // To achieve this, we need to pass a callback from the parent to the chlid,\n  // so that the parent can collect the results of all the async network requests.\n  // However, this can cause a render loop, since invoking the callback can cause\n  // the parent to rerender, which causese the child to rerender, which causes\n  // the callback to be invoked.\n  //\n  // To solve this, we memoize all the `BalanceListItem` children components.\n  const setUsdValuesCallback = useCallback(\n    (publicKey, usdValue) => {\n      if (usdValues[publicKey.toString()] !== usdValue) {\n        usdValues[publicKey.toString()] = usdValue;\n        if (fairsIsLoaded(publicKeys)) {\n          setForceUpdate((forceUpdate) => !forceUpdate);\n        }\n      }\n    },\n    [publicKeys],\n  );\n  const balanceListItemsMemo = useMemo(() => {\n    return sortedPublicKeys.map((pk) => {\n      return React.memo((props) => {\n        return (\n          <BalanceListItem\n            key={pk.toString()}\n            publicKey={pk}\n            setUsdValue={setUsdValuesCallback}\n          />\n        );\n      });\n    });\n  }, [sortedPublicKeys, setUsdValuesCallback]);\n\n  const iconSize = isExtensionWidth ? 'small' : 'medium';\n  const {t} = useTranslation();\n  return (\n    <Paper>\n      <AppBar position=\"static\" color=\"default\" elevation={1}>\n        <Toolbar>\n          <CopyToClipboard\n            text={t(\"selectedAccount\") && selectedAccount.address.toBase58()}\n            onCopy={() => {\n              setIsCopied(true);\n              setTimeout(() => {\n                setIsCopied(false);\n              }, 1000);\n            }}\n          >\n            <Tooltip\n              title={\n                <Typography>\n                  {isCopied ? 'Copied' : 'Copy to clipboard'}\n                </Typography>\n              }\n              style={{ fontSize: '10rem' }}\n            >\n              <Typography\n                variant=\"h6\"\n                style={{\n                  flexGrow: 1,\n                  fontSize: isExtensionWidth && '1rem',\n                  cursor: 'pointer',\n                }}\n                hover={true}\n                component=\"h2\"\n              >\n                {selectedAccount && selectedAccount.name}\n                {isExtensionWidth\n                  ? ''\n                  : ` (${\n                      selectedAccount &&\n                      shortenAddress(selectedAccount.address.toBase58())\n                    })`}{' '}\n                {allTokensLoaded && (\n                  <>({numberFormat.format(totalUsdValue.toFixed(2))})</>\n                )}\n              </Typography>\n            </Tooltip>\n          </CopyToClipboard>\n          {selectedAccount &&\n            selectedAccount.name !== 'Main account' &&\n            selectedAccount.name !== 'Hardware wallet' && (\n              <Tooltip title={t('editAccount')} arrow>\n                <IconButton\n                  size={iconSize}\n                  onClick={() => setShowEditAccountNameDialog(true)}\n                >\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n          <Tooltip title=\"Deposit via FTX Pay\" arrow>\n            <IconButton\n              size={iconSize}\n              onClick={() => setShowFtxPayDialog(true)}\n            >\n              <img\n                title={'FTX Pay'}\n                alt={'FTX Pay'}\n                style={{\n                  width: 20,\n                  height: 20,\n                }}\n                src={ftxPayIcon}\n              />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"See your domains\" arrow>\n            <IconButton size={iconSize} onClick={() => setShowDomains(true)}>\n              <DnsIcon />\n            </IconButton>\n          </Tooltip>\n          <DomainsList open={showDomains} setOpen={setShowDomains} />\n          {region.result && !region.result.isRestricted && <SwapButton size={iconSize} />}\n          <Tooltip title=\"Migrate Tokens\" arrow>\n            <IconButton\n              size={iconSize}\n              onClick={() => setShowMergeAccounts(true)}\n            >\n              <MergeType />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Add Token\" arrow>\n            <IconButton\n              size={iconSize}\n              onClick={() => setShowAddTokenDialog(true)}\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Sort Tokens\" arrow>\n            <IconButton\n              size={iconSize}\n              onClick={() => {\n                switch (sortAccounts) {\n                  case SortAccounts.None:\n                    setSortAccounts(SortAccounts.Ascending);\n                    return;\n                  case SortAccounts.Ascending:\n                    setSortAccounts(SortAccounts.Descending);\n                    return;\n                  case SortAccounts.Descending:\n                    setSortAccounts(SortAccounts.None);\n                    return;\n                  default:\n                    console.error('invalid sort type', sortAccounts);\n                }\n              }}\n            >\n              <SortIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Refresh\" arrow>\n            <IconButton\n              size={iconSize}\n              onClick={() => {\n                refreshWalletPublicKeys(wallet);\n                publicKeys.map((publicKey) =>\n                  refreshAccountInfo(wallet.connection, publicKey, true),\n                );\n              }}\n              style={{ marginRight: -12 }}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <List disablePadding>\n        {balanceListItemsMemo.map((Memoized) => (\n          <Memoized />\n        ))}\n        {loaded ? null : <LoadingIndicator />}\n      </List>\n      <AddTokenDialog\n        open={showAddTokenDialog}\n        onClose={() => setShowAddTokenDialog(false)}\n      />\n      <FtxPayDialog\n        open={showFtxPayDialog}\n        publicKeys={publicKeys}\n        onClose={() => setShowFtxPayDialog(false)}\n      />\n      <EditAccountNameDialog\n        open={showEditAccountNameDialog}\n        onClose={() => setShowEditAccountNameDialog(false)}\n        oldName={selectedAccount ? selectedAccount.name : ''}\n        onEdit={(name) => {\n          setAccountName(selectedAccount.selector, name);\n          setShowEditAccountNameDialog(false);\n        }}\n      />\n      <MergeAccountsDialog\n        open={showMergeAccounts}\n        onClose={() => setShowMergeAccounts(false)}\n      />\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  address: {\n    textOverflow: 'ellipsis',\n    overflowX: 'hidden',\n  },\n  itemDetails: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  viewDetails: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nexport function BalanceListItem({ publicKey, expandable, setUsdValue }) {\n  const wallet = useWallet();\n  const balanceInfo = useBalanceInfo(publicKey);\n  const classes = useStyles();\n  const connection = useConnection();\n  const [open, setOpen] = useState(true);\n  const isExtensionWidth = useIsExtensionWidth();\n  const [, setForceUpdate] = useState(false);\n  // Valid states:\n  //   * undefined => loading.\n  //   * null => not found.\n  //   * else => price is loaded.\n  const [price, setPrice] = useState(undefined);\n  useEffect(() => {\n    if (balanceInfo) {\n      if (balanceInfo.tokenSymbol) {\n        const coin = balanceInfo.tokenSymbol.toUpperCase();\n       \n        // Don't fetch USD stable coins. Mark to 1 USD.\n        if (coin === 'USDT' || coin === 'USDC' ) {\n          setPrice(1);\n        }\n        // A Serum market exists. Fetch the price.\n        else if (serumMarkets[coin]) {\n          let m = serumMarkets[coin];\n          priceStore\n            .getPrice(connection, m.name)\n            .then((price) => {\n              setPrice(price);\n              console.log(\"Price \" + price);\n            })\n            .catch((err) => {\n              console.error(err);\n              setPrice(null);\n            });\n        }\n        // No Serum market exists.\n        else {\n          setPrice(null);\n        }\n      }\n      // No token symbol so don't fetch market data.\n      else {\n        setPrice(null);\n      }\n    }\n  }, [price, balanceInfo, connection]);\n\n  expandable = true;\n\n  if (!balanceInfo) {\n    return <LoadingIndicator delay={0} />;\n  }\n\n  let {\n    amount,\n    decimals,\n    mint,\n    tokenName,\n    tokenSymbol,\n    tokenLogoUri,\n  } = balanceInfo;\n  tokenName = tokenName ?? abbreviateAddress(mint);\n  let displayName;\n  if (isExtensionWidth) {\n    displayName = tokenSymbol ?? tokenName;\n  } else {\n    displayName = tokenName + (tokenSymbol ? ` (${tokenSymbol})` : '');\n  }\n\n  // Fetch and cache the associated token address.\n  if (wallet && wallet.publicKey && mint) {\n    if (\n      associatedTokensCache[wallet.publicKey.toString()] === undefined ||\n      associatedTokensCache[wallet.publicKey.toString()][mint.toString()] ===\n        undefined\n    ) {\n      findAssociatedTokenAddress(wallet.publicKey, mint).then((assocTok) => {\n        let walletAccounts = Object.assign(\n          {},\n          associatedTokensCache[wallet.publicKey.toString()],\n        );\n        walletAccounts[mint.toString()] = assocTok;\n        associatedTokensCache[wallet.publicKey.toString()] = walletAccounts;\n        if (assocTok.equals(publicKey)) {\n          // Force a rerender now that we've cached the value.\n          setForceUpdate((forceUpdate) => !forceUpdate);\n        }\n      });\n    }\n  }\n\n  // undefined => not loaded.\n  let isAssociatedToken = mint ? undefined : false;\n  if (\n    wallet &&\n    wallet.publicKey &&\n    mint &&\n    associatedTokensCache[wallet.publicKey.toString()]\n  ) {\n    let acc =\n      associatedTokensCache[wallet.publicKey.toString()][mint.toString()];\n    if (acc) {\n      if (acc.equals(publicKey)) {\n        isAssociatedToken = true;\n      } else {\n        isAssociatedToken = false;\n      }\n    }\n  }\n\n  const subtitle =\n    isExtensionWidth || !publicKey.equals(balanceInfo.owner) ? undefined : (\n      <div style={{ display: 'flex', height: '20px', overflow: 'hidden' }}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n        >\n          {publicKey.toBase58()}\n        </div>\n      </div>\n    );\n\n  const usdValue =\n    price === undefined // Not yet loaded.\n      ? undefined\n      : price === null // Loaded and empty.\n      ? null\n      : ((amount / Math.pow(10, decimals)) * price).toFixed(2); // Loaded.\n  if (setUsdValue && usdValue !== undefined) {\n    setUsdValue(publicKey, usdValue === null ? null : parseFloat(usdValue));\n  }\n\n  return (\n    <>\n      <ListItem>\n        <ListItemIcon>\n          <TokenIcon\n            mint={mint}\n            tokenName={tokenName}\n            url={tokenLogoUri}\n            size={28}\n          />\n        </ListItemIcon>\n        <div style={{ display: 'flex', flex: 1 }}>\n          <ListItemText\n            primary={\n              <>\n                {balanceFormat.format(amount / Math.pow(10, decimals))}{' '}\n                {displayName}\n              </>\n            }\n            secondary={subtitle}\n            secondaryTypographyProps={{ className: classes.address }}\n          />\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column',\n            }}\n          >\n            {price && (\n              <Typography color=\"textSecondary\">\n                Price (USDT): {numberFormat.format(usdValue)}\n              </Typography>\n            )}\n          </div>\n        </div>\n       {expandable ? open ?  false : false: <></>}\n      </ListItem>\n      {expandable && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <BalanceListItemDetails\n            isAssociatedToken={isAssociatedToken}\n            publicKey={publicKey}\n            serumMarkets={serumMarkets}\n            balanceInfo={balanceInfo}\n          />\n        </Collapse>\n      )}\n    </>\n  );\n}\n\nfunction BalanceListItemDetails({\n  publicKey,\n  serumMarkets,\n  balanceInfo,\n  isAssociatedToken,\n}) {\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const classes = useStyles();\n  const [sendDialogOpen, setSendDialogOpen] = useState(false);\n  const [depositDialogOpen, setDepositDialogOpen] = useState(false);\n  const [tokenInfoDialogOpen, setTokenInfoDialogOpen] = useState(false);\n  const [exportAccDialogOpen, setExportAccDialogOpen] = useState(false);\n  const [\n    closeTokenAccountDialogOpen,\n    setCloseTokenAccountDialogOpen,\n  ] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const wallet = useWallet();\n  const isProdNetwork = useIsProdNetwork();\n  const {t} = useTranslation();\n  const [swapInfo] = useAsyncData(async () => {\n    if (!showSwapAddress || !isProdNetwork) {\n      return null;\n    }\n    return await swapApiRequest(\n      'POST',\n      'swap_to',\n      {\n        blockchain: 'sol',\n        coin: balanceInfo.mint?.toBase58(),\n        address: publicKey.toBase58(),\n      },\n      { ignoreUserErrors: true },\n    );\n  }, [\n    'swapInfo',\n    isProdNetwork,\n    balanceInfo.mint?.toBase58(),\n    publicKey.toBase58(),\n  ]);\n  const isExtensionWidth = useIsExtensionWidth();\n\n  if (!balanceInfo) {\n    return <LoadingIndicator delay={0} />;\n  }\n\n  let { mint, tokenName, tokenSymbol, owner, amount } = balanceInfo;\n\n  // Only show the export UI for the native SOL coin.\n  const exportNeedsDisplay =\n    mint === null && tokenName === 'SOL' && tokenSymbol === 'SOL';\n\n  const market = tokenSymbol\n    ? serumMarkets[tokenSymbol.toUpperCase()]\n      ? serumMarkets[tokenSymbol.toUpperCase()].publicKey\n      : undefined\n    : undefined;\n  const isSolAddress = publicKey.equals(owner);\n  const additionalInfo = isExtensionWidth ? undefined : (\n    <>\n      \n      <Typography variant=\"body2\">\n        {t('tokenName')}: {tokenName ?? 'Unknown'}\n      </Typography>\n      <Typography variant=\"body2\">\n        {t('tokenSymbol')}: {tokenSymbol ?? 'Unknown'}\n      </Typography>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <div>\n          {!isSolAddress && isAssociatedToken === false && (\n            <div style={{ display: 'flex' }}>\n              {t('auxaccount')}\n            </div>\n          )}\n          <Typography variant=\"body2\">\n            <Link\n              href={\n                `https://solscan.io/account/${publicKey.toBase58()}` + urlSuffix\n              }\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {t('solscan')}\n            </Link>\n          </Typography>\n          {market && (\n            <Typography variant=\"body2\">\n              <Link\n                href={`https://dex.projectserum.com/#/market/${market}`}\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                \n                {t('serum')}\n              </Link>\n            </Typography>\n          )}\n          {swapInfo && swapInfo.coin.erc20Contract && (\n            <Typography variant=\"body2\">\n              <Link\n                href={\n                  `https://etherscan.io/token/${swapInfo.coin.erc20Contract}` +\n                  urlSuffix\n                }\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                \n                {t('ethereum')}\n              </Link>\n            </Typography>\n          )}\n          {!isSolAddress && (\n            <Typography variant=\"body2\">\n              <Link\n                className={classes.viewDetails}\n                onClick={() => setShowDetails(!showDetails)}\n              >\n                {t('ViewDetails')}\n              </Link>\n            </Typography>\n          )}\n          {showDetails &&\n            (mint ? (\n              <Typography variant=\"body2\" className={classes.address}>\n                {t(\"mintAddress\")}: {mint.toBase58()}\n              </Typography>\n            ) : null)}\n          {!isSolAddress && showDetails && (\n            <Typography variant=\"body2\" className={classes.address}>\n              {isAssociatedToken ? 'Associated' : ''} Token Metadata:{' '}\n              {publicKey.toBase58()}\n            </Typography>\n          )}\n        </div>\n        {exportNeedsDisplay && wallet.allowsExport && (\n          <div>\n            <Typography variant=\"body2\">\n              <Link href={'#'} onClick={(e) => setExportAccDialogOpen(true)}>\n                {t('exportcryptowallet')}\n              </Link>\n            </Typography>\n          </div>\n        )}\n      </div>\n    </>\n  );\n\n  return (\n    <>\n      {wallet.allowsExport && (\n        <ExportAccountDialog\n          onClose={() => setExportAccDialogOpen(false)}\n          open={exportAccDialogOpen}\n        />\n      )}\n      <div className={classes.itemDetails}>\n        <div className={classes.buttonContainer}>\n          {!publicKey.equals(owner) && showTokenInfoDialog ? (\n            <Button\n              variant=\"outlined\"\n              color=\"default\"\n              startIcon={<InfoIcon />}\n              onClick={() => setTokenInfoDialogOpen(true)}\n            >\n              {t('tokenInfo')}\n            </Button>\n          ) : null}\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<ReceiveIcon />}\n            onClick={() => setDepositDialogOpen(true)}\n          >\n            {t('deposit')} \n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<SendIcon />}\n            onClick={() => setSendDialogOpen(true)}\n          >\n             \n            {t('withdraw')} \n          </Button>\n          {localStorage.getItem('warning-close-account') &&\n          mint &&\n          amount === 0 ? (\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n              startIcon={<DeleteIcon />}\n              onClick={() => setCloseTokenAccountDialogOpen(true)}\n            >\n              {t('Delete')}\n            </Button>\n          ) : null}\n        </div>\n        {additionalInfo}\n      </div>\n      <SendDialog\n        open={sendDialogOpen}\n        onClose={() => setSendDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n      <DepositDialog\n        open={depositDialogOpen}\n        onClose={() => setDepositDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n        swapInfo={swapInfo}\n        isAssociatedToken={isAssociatedToken}\n      />\n      <TokenInfoDialog\n        open={tokenInfoDialogOpen}\n        onClose={() => setTokenInfoDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n      <CloseTokenAccountDialog\n        open={closeTokenAccountDialogOpen}\n        onClose={() => setCloseTokenAccountDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n    </>\n  );\n}\n","/Users/453543/drawer/spl-wallet-jodc/src/utils/markets.ts",[],"/Users/453543/drawer/spl-wallet-jodc/src/pages/Title.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/MergeAccountsDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/SwapButton.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/EditAccountNameDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/TokenIcon.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/DomainsList.tsx",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/notifications.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/tokens/index.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/tokens/data.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/tokens/instructions.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/name-service/index.ts",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/CloseTokenAccountButton.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/config.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/DepositDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/SendDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/AddTokenDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/swap/api.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/TokenInfoDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/FtxPay/FtxPayDialog.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/region.ts",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/CopyableDisplay.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/swap/eth.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/EthFeeEstimate.tsx",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/walletProvider/localStorage.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/walletProvider/ledger.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/SignTransactionFormContent.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/SignFormContent.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/DebugButtons.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/walletProvider/factory.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/ConnectionsList.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/walletProvider/ledger-core.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/TokenInstruction.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/DexInstruction.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/StakeInstruction.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/UnknownInstruction.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/SystemInstruction.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/NewOrder.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/utils/transactions.ts",[],"/Users/453543/drawer/spl-wallet-jodc/src/components/instructions/LabelValue.js",[],"/Users/453543/drawer/spl-wallet-jodc/src/translations/i18n.js",[],{"ruleId":"746","replacedBy":"747"},{"ruleId":"748","replacedBy":"749"},{"ruleId":"750","severity":1,"message":"751","line":9,"column":8,"nodeType":"752","messageId":"753","endLine":9,"endColumn":12},{"ruleId":"750","severity":1,"message":"754","line":31,"column":8,"nodeType":"752","messageId":"753","endLine":31,"endColumn":14},{"ruleId":"750","severity":1,"message":"755","line":69,"column":24,"nodeType":"752","messageId":"753","endLine":69,"endColumn":34},{"ruleId":"756","severity":1,"message":"757","line":174,"column":20,"nodeType":"758","endLine":176,"endColumn":17},{"ruleId":"759","severity":1,"message":"760","line":176,"column":17,"nodeType":"761","endLine":179,"endColumn":19},{"ruleId":"759","severity":1,"message":"760","line":206,"column":17,"nodeType":"761","endLine":209,"endColumn":19},{"ruleId":"756","severity":1,"message":"757","line":210,"column":21,"nodeType":"758","endLine":212,"endColumn":15},{"ruleId":"750","severity":1,"message":"762","line":2,"column":10,"nodeType":"752","messageId":"753","endLine":2,"endColumn":20},{"ruleId":"750","severity":1,"message":"763","line":2,"column":22,"nodeType":"752","messageId":"753","endLine":2,"endColumn":33},{"ruleId":"750","severity":1,"message":"764","line":8,"column":9,"nodeType":"752","messageId":"753","endLine":8,"endColumn":17},{"ruleId":"750","severity":1,"message":"765","line":8,"column":70,"nodeType":"752","messageId":"753","endLine":8,"endColumn":89},{"ruleId":"750","severity":1,"message":"766","line":26,"column":8,"nodeType":"752","messageId":"753","endLine":26,"endColumn":16},{"ruleId":"750","severity":1,"message":"767","line":33,"column":21,"nodeType":"752","messageId":"753","endLine":33,"endColumn":35},{"ruleId":"750","severity":1,"message":"768","line":51,"column":8,"nodeType":"752","messageId":"753","endLine":51,"endColumn":17},{"ruleId":"750","severity":1,"message":"769","line":52,"column":8,"nodeType":"752","messageId":"753","endLine":52,"endColumn":16},{"ruleId":"750","severity":1,"message":"770","line":54,"column":10,"nodeType":"752","messageId":"753","endLine":54,"endColumn":34},{"ruleId":"750","severity":1,"message":"771","line":54,"column":36,"nodeType":"752","messageId":"753","endLine":54,"endColumn":51},{"ruleId":"750","severity":1,"message":"772","line":59,"column":8,"nodeType":"752","messageId":"753","endLine":59,"endColumn":19},{"ruleId":"750","severity":1,"message":"773","line":60,"column":8,"nodeType":"752","messageId":"753","endLine":60,"endColumn":14},{"ruleId":"750","severity":1,"message":"774","line":62,"column":8,"nodeType":"752","messageId":"753","endLine":62,"endColumn":15},{"ruleId":"750","severity":1,"message":"775","line":62,"column":19,"nodeType":"752","messageId":"753","endLine":62,"endColumn":31},{"ruleId":"750","severity":1,"message":"776","line":63,"column":8,"nodeType":"752","messageId":"753","endLine":63,"endColumn":19},{"ruleId":"750","severity":1,"message":"777","line":65,"column":8,"nodeType":"752","messageId":"753","endLine":65,"endColumn":18},{"ruleId":"778","severity":1,"message":"779","line":137,"column":3,"nodeType":"780","messageId":"781","endLine":137,"endColumn":10},{"ruleId":"778","severity":1,"message":"782","line":141,"column":3,"nodeType":"780","messageId":"781","endLine":141,"endColumn":10},{"ruleId":"746","replacedBy":"747"},{"ruleId":"748","replacedBy":"749"},{"ruleId":"750","severity":1,"message":"783","line":20,"column":8,"nodeType":"752","messageId":"753","endLine":20,"endColumn":18},{"ruleId":"750","severity":1,"message":"784","line":21,"column":8,"nodeType":"752","messageId":"753","endLine":21,"endColumn":18},{"ruleId":"750","severity":1,"message":"785","line":393,"column":16,"nodeType":"752","messageId":"753","endLine":393,"endColumn":23},{"ruleId":"786","severity":1,"message":"787","line":3,"column":10,"nodeType":"752","messageId":"753","endLine":3,"endColumn":21},{"ruleId":"750","severity":1,"message":"788","line":3,"column":8,"nodeType":"752","messageId":"753","endLine":3,"endColumn":16},{"ruleId":"750","severity":1,"message":"789","line":12,"column":8,"nodeType":"752","messageId":"753","endLine":12,"endColumn":18},{"ruleId":"750","severity":1,"message":"790","line":15,"column":8,"nodeType":"752","messageId":"753","endLine":15,"endColumn":13},{"ruleId":"750","severity":1,"message":"791","line":16,"column":8,"nodeType":"752","messageId":"753","endLine":16,"endColumn":19},{"ruleId":"750","severity":1,"message":"792","line":22,"column":10,"nodeType":"752","messageId":"753","endLine":22,"endColumn":18},{"ruleId":"750","severity":1,"message":"793","line":32,"column":7,"nodeType":"752","messageId":"753","endLine":32,"endColumn":25},{"ruleId":"750","severity":1,"message":"794","line":38,"column":7,"nodeType":"752","messageId":"753","endLine":38,"endColumn":28},{"ruleId":"750","severity":1,"message":"795","line":153,"column":9,"nodeType":"752","messageId":"753","endLine":153,"endColumn":16},{"ruleId":"750","severity":1,"message":"796","line":2,"column":8,"nodeType":"752","messageId":"753","endLine":2,"endColumn":12},{"ruleId":"750","severity":1,"message":"797","line":6,"column":10,"nodeType":"752","messageId":"753","endLine":6,"endColumn":24},{"ruleId":"750","severity":1,"message":"798","line":11,"column":9,"nodeType":"752","messageId":"753","endLine":11,"endColumn":24},{"ruleId":"750","severity":1,"message":"799","line":8,"column":8,"nodeType":"752","messageId":"753","endLine":8,"endColumn":12},{"ruleId":"750","severity":1,"message":"800","line":10,"column":8,"nodeType":"752","messageId":"753","endLine":10,"endColumn":15},{"ruleId":"750","severity":1,"message":"801","line":18,"column":8,"nodeType":"752","messageId":"753","endLine":18,"endColumn":23},{"ruleId":"750","severity":1,"message":"802","line":20,"column":10,"nodeType":"752","messageId":"753","endLine":20,"endColumn":23},{"ruleId":"750","severity":1,"message":"803","line":20,"column":25,"nodeType":"752","messageId":"753","endLine":20,"endColumn":43},{"ruleId":"750","severity":1,"message":"804","line":58,"column":7,"nodeType":"752","messageId":"753","endLine":58,"endColumn":13},{"ruleId":"750","severity":1,"message":"751","line":9,"column":8,"nodeType":"752","messageId":"753","endLine":9,"endColumn":12},{"ruleId":"750","severity":1,"message":"754","line":31,"column":8,"nodeType":"752","messageId":"753","endLine":31,"endColumn":14},{"ruleId":"750","severity":1,"message":"755","line":69,"column":24,"nodeType":"752","messageId":"753","endLine":69,"endColumn":34},{"ruleId":"756","severity":1,"message":"757","line":172,"column":20,"nodeType":"758","endLine":174,"endColumn":17},{"ruleId":"759","severity":1,"message":"760","line":174,"column":17,"nodeType":"761","endLine":177,"endColumn":19},{"ruleId":"759","severity":1,"message":"760","line":204,"column":17,"nodeType":"761","endLine":207,"endColumn":19},{"ruleId":"756","severity":1,"message":"757","line":208,"column":21,"nodeType":"758","endLine":210,"endColumn":15},{"ruleId":"746","replacedBy":"805"},{"ruleId":"748","replacedBy":"806"},{"ruleId":"750","severity":1,"message":"762","line":2,"column":10,"nodeType":"752","messageId":"753","endLine":2,"endColumn":20},{"ruleId":"750","severity":1,"message":"763","line":2,"column":22,"nodeType":"752","messageId":"753","endLine":2,"endColumn":33},{"ruleId":"750","severity":1,"message":"764","line":8,"column":9,"nodeType":"752","messageId":"753","endLine":8,"endColumn":17},{"ruleId":"750","severity":1,"message":"765","line":8,"column":70,"nodeType":"752","messageId":"753","endLine":8,"endColumn":89},{"ruleId":"750","severity":1,"message":"766","line":26,"column":8,"nodeType":"752","messageId":"753","endLine":26,"endColumn":16},{"ruleId":"750","severity":1,"message":"767","line":33,"column":21,"nodeType":"752","messageId":"753","endLine":33,"endColumn":35},{"ruleId":"750","severity":1,"message":"768","line":51,"column":8,"nodeType":"752","messageId":"753","endLine":51,"endColumn":17},{"ruleId":"750","severity":1,"message":"769","line":52,"column":8,"nodeType":"752","messageId":"753","endLine":52,"endColumn":16},{"ruleId":"750","severity":1,"message":"770","line":54,"column":10,"nodeType":"752","messageId":"753","endLine":54,"endColumn":34},{"ruleId":"750","severity":1,"message":"771","line":54,"column":36,"nodeType":"752","messageId":"753","endLine":54,"endColumn":51},{"ruleId":"750","severity":1,"message":"772","line":59,"column":8,"nodeType":"752","messageId":"753","endLine":59,"endColumn":19},{"ruleId":"750","severity":1,"message":"773","line":60,"column":8,"nodeType":"752","messageId":"753","endLine":60,"endColumn":14},{"ruleId":"750","severity":1,"message":"774","line":62,"column":8,"nodeType":"752","messageId":"753","endLine":62,"endColumn":15},{"ruleId":"750","severity":1,"message":"775","line":62,"column":19,"nodeType":"752","messageId":"753","endLine":62,"endColumn":31},{"ruleId":"750","severity":1,"message":"776","line":63,"column":8,"nodeType":"752","messageId":"753","endLine":63,"endColumn":19},{"ruleId":"750","severity":1,"message":"777","line":65,"column":8,"nodeType":"752","messageId":"753","endLine":65,"endColumn":18},{"ruleId":"778","severity":1,"message":"779","line":137,"column":3,"nodeType":"780","messageId":"781","endLine":137,"endColumn":10},{"ruleId":"778","severity":1,"message":"782","line":141,"column":3,"nodeType":"780","messageId":"781","endLine":141,"endColumn":10},{"ruleId":"750","severity":1,"message":"788","line":3,"column":8,"nodeType":"752","messageId":"753","endLine":3,"endColumn":16},{"ruleId":"750","severity":1,"message":"789","line":12,"column":8,"nodeType":"752","messageId":"753","endLine":12,"endColumn":18},{"ruleId":"750","severity":1,"message":"790","line":15,"column":8,"nodeType":"752","messageId":"753","endLine":15,"endColumn":13},{"ruleId":"750","severity":1,"message":"791","line":16,"column":8,"nodeType":"752","messageId":"753","endLine":16,"endColumn":19},{"ruleId":"750","severity":1,"message":"792","line":22,"column":10,"nodeType":"752","messageId":"753","endLine":22,"endColumn":18},{"ruleId":"750","severity":1,"message":"793","line":32,"column":7,"nodeType":"752","messageId":"753","endLine":32,"endColumn":25},{"ruleId":"750","severity":1,"message":"794","line":38,"column":7,"nodeType":"752","messageId":"753","endLine":38,"endColumn":28},{"ruleId":"750","severity":1,"message":"795","line":153,"column":9,"nodeType":"752","messageId":"753","endLine":153,"endColumn":16},{"ruleId":"750","severity":1,"message":"799","line":8,"column":8,"nodeType":"752","messageId":"753","endLine":8,"endColumn":12},{"ruleId":"750","severity":1,"message":"800","line":10,"column":8,"nodeType":"752","messageId":"753","endLine":10,"endColumn":15},{"ruleId":"750","severity":1,"message":"801","line":18,"column":8,"nodeType":"752","messageId":"753","endLine":18,"endColumn":23},{"ruleId":"750","severity":1,"message":"802","line":20,"column":10,"nodeType":"752","messageId":"753","endLine":20,"endColumn":23},{"ruleId":"750","severity":1,"message":"803","line":20,"column":25,"nodeType":"752","messageId":"753","endLine":20,"endColumn":43},{"ruleId":"750","severity":1,"message":"804","line":58,"column":7,"nodeType":"752","messageId":"753","endLine":58,"endColumn":13},{"ruleId":"746","replacedBy":"805"},{"ruleId":"748","replacedBy":"806"},{"ruleId":"750","severity":1,"message":"796","line":2,"column":8,"nodeType":"752","messageId":"753","endLine":2,"endColumn":12},{"ruleId":"750","severity":1,"message":"797","line":6,"column":10,"nodeType":"752","messageId":"753","endLine":6,"endColumn":24},{"ruleId":"750","severity":1,"message":"798","line":11,"column":9,"nodeType":"752","messageId":"753","endLine":11,"endColumn":24},{"ruleId":"750","severity":1,"message":"783","line":20,"column":8,"nodeType":"752","messageId":"753","endLine":20,"endColumn":18},{"ruleId":"750","severity":1,"message":"784","line":21,"column":8,"nodeType":"752","messageId":"753","endLine":21,"endColumn":18},{"ruleId":"750","severity":1,"message":"785","line":393,"column":16,"nodeType":"752","messageId":"753","endLine":393,"endColumn":23},"no-native-reassign",["807"],"no-negated-in-lhs",["808"],"no-unused-vars","'blue' is defined but never used.","Identifier","unusedVar","'Invest' is defined but never used.","'appElement' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'CLUSTERS' is defined but never used.","'customClusterExists' is defined but never used.","'CodeIcon' is defined but never used.","'WalletProvider' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'AddCircleOutlineOutlined' is defined but never used.","'SubjectOutlined' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'SvgIcon' is defined but never used.","'SvgIconProps' is defined but never used.","'IslamicIcon' is defined but never used.","'InputLabel' is defined but never used.","no-dupe-keys","Duplicate key 'content'.","ObjectExpression","unexpected","Duplicate key 'toolbar'.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'setOpen' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'MAINNET_URL' is defined but never used.","'Deposits' is defined but never used.","'CardHeader' is defined but never used.","'Paper' is defined but never used.","'balanceInfo' is defined but never used.","'DataGrid' is defined but never used.","'rows' is assigned a value but never used.","'columns' is assigned a value but never used.","'classes' is assigned a value but never used.","'Link' is defined but never used.","'preventDefault' is defined but never used.","'currentDateTime' is assigned a value but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'mainListItems' is defined but never used.","'secondaryListItems' is defined but never used.","'Drawer' is assigned a value but never used.",["807"],["808"],"no-global-assign","no-unsafe-negation"]